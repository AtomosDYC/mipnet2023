// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using mipBackend.Data;

#nullable disable

namespace mipBackend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Blk01Bloqueo", b =>
                {
                    b.Property<int>("Blk01llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BLK01_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Blk01llave"), 1L, 1);

                    b.Property<int?>("Blk01activo")
                        .HasColumnType("int")
                        .HasColumnName("BLK01_activo");

                    b.Property<string>("Blk01descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("BLK01_descripcion");

                    b.Property<int?>("Blk01MaxDuraciondia")
                        .HasColumnType("int")
                        .HasColumnName("BLK01_MaxDuraciondia");

                    b.Property<int?>("Blk01MinDuraciondia")
                        .HasColumnType("int")
                        .HasColumnName("BLK01_MinDuraciondia");

                    b.Property<string>("Blk01nombreBloqueo")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("BLK01_nombreBloqueo");

                    b.Property<int?>("Blk01permanente")
                        .HasColumnType("int")
                        .HasColumnName("BLK01_permanente");

                    b.Property<int?>("Blk02llave")
                        .HasColumnType("int")
                        .HasColumnName("BLK02_llave");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("Blk01llave");

                    b.HasIndex("Blk02llave");

                    b.ToTable("BLK01_Bloqueos", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Blk02TipoBloqueo", b =>
                {
                    b.Property<int>("Blk02llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BLK02_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Blk02llave"), 1L, 1);

                    b.Property<int?>("Blk02activo")
                        .HasColumnType("int")
                        .HasColumnName("BLK02_activo");

                    b.Property<string>("Blk02descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("BLK02_descripcion");

                    b.Property<string>("Blk02nombre")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("BLK02_nombre");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("Blk02llave");

                    b.ToTable("BLK02_TipoBloqueo", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Blk03BloqueoUsuario", b =>
                {
                    b.Property<int>("Blk03llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BLK03_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Blk03llave"), 1L, 1);

                    b.Property<int?>("Blk01llave")
                        .HasColumnType("int")
                        .HasColumnName("BLK01_llave");

                    b.Property<int?>("Blk03activo")
                        .HasColumnType("int")
                        .HasColumnName("BLK03_activo");

                    b.Property<DateTime?>("Blk03FechaInicio")
                        .HasColumnType("datetime")
                        .HasColumnName("BLK03_FechaInicio");

                    b.Property<DateTime?>("Blk03FechaTermino")
                        .HasColumnType("datetime")
                        .HasColumnName("BLK03_FechaTermino");

                    b.Property<Guid?>("userid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SECU02_llave");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("Blk03llave");

                    b.HasIndex("Blk01llave");

                    b.ToTable("BLK03_BloqueoUsuario", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Clbr01Calibracion", b =>
                {
                    b.Property<int>("Clbr01llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CLBR01_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Clbr01llave"), 1L, 1);

                    b.Property<int?>("Clbr01activo")
                        .HasColumnType("int")
                        .HasColumnName("CLBR01_activo");

                    b.Property<string>("Clbr01descripcion")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("CLBR01_descripcion");

                    b.Property<DateTime?>("Clbr01FechaCalibracion")
                        .HasColumnType("datetime")
                        .HasColumnName("CLBR01_FechaCalibracion");

                    b.Property<string>("Clbr01nombre")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("CLBR01_nombre");

                    b.Property<string>("Clbr01UrlPdf")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("CLBR01_UrlPdf");

                    b.Property<int?>("Clbr02llave")
                        .HasColumnType("int")
                        .HasColumnName("CLBR02_llave");

                    b.Property<int?>("cnt01llave")
                        .HasColumnType("int")
                        .HasColumnName("CNT01_llave");

                    b.Property<int?>("Sercl01llave")
                        .HasColumnType("int")
                        .HasColumnName("SERCL01_llave");

                    b.Property<int?>("Temp02llave")
                        .HasColumnType("int")
                        .HasColumnName("TEMP02_llave");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("Clbr01llave");

                    b.HasIndex("Clbr02llave");

                    b.ToTable("CLBR01_Calibracion", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Clbr02TipoCalibracion", b =>
                {
                    b.Property<int>("Clbr02llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CLBR02_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Clbr02llave"), 1L, 1);

                    b.Property<int?>("Clbr02activo")
                        .HasColumnType("int")
                        .HasColumnName("CLBR02_activo");

                    b.Property<string>("Clbr02descripcion")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("CLBR02_descripcion");

                    b.Property<string>("Clbr02nombre")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("CLBR02_nombre");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("Clbr02llave");

                    b.ToTable("CLBR02_TipoCalibracion", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.cnt01CuentaCliente", b =>
                {
                    b.Property<int>("cnt01llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CNT01_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cnt01llave"), 1L, 1);

                    b.Property<int?>("cnt01activo")
                        .HasColumnType("int")
                        .HasColumnName("CNT01_activo");

                    b.Property<DateTime?>("cnt01AnioIngreso")
                        .HasColumnType("date")
                        .HasColumnName("CNT01_anioIngreso");

                    b.Property<int?>("cnt01CuentaSap")
                        .HasColumnType("int")
                        .HasColumnName("CNT01_CuentaSap");

                    b.Property<DateTime?>("cnt01FechaIngresoSap")
                        .HasColumnType("datetime")
                        .HasColumnName("CNT01_FechaIngresoSap");

                    b.Property<string>("cnt01nombre")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("CNT01_nombre");

                    b.Property<int?>("cnt01NumeroSap")
                        .HasColumnType("int")
                        .HasColumnName("CNT01_NumeroSap");

                    b.Property<int?>("cnt02llave")
                        .HasColumnType("int")
                        .HasColumnName("CNT02_llave");

                    b.Property<int?>("cnt03llave")
                        .HasColumnType("int")
                        .HasColumnName("CNT03_llave");

                    b.Property<int?>("per01llave")
                        .HasColumnType("int")
                        .HasColumnName("PER01_llave");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("cnt01llave");

                    b.HasIndex("cnt02llave");

                    b.HasIndex("cnt03llave");

                    b.HasIndex("per01llave");

                    b.ToTable("CNT01_CuentaCliente", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.cnt02TipoCuenta", b =>
                {
                    b.Property<int>("cnt02llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CNT02_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cnt02llave"), 1L, 1);

                    b.Property<int?>("cnt02activo")
                        .HasColumnType("int")
                        .HasColumnName("CNT02_activo");

                    b.Property<string>("cnt02descripcion")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("CNT02_descripcion");

                    b.Property<string>("cnt02nombre")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("CNT02_nombre");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("cnt02llave");

                    b.ToTable("CNT02_TipoCuenta", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.cnt03TipoCliente", b =>
                {
                    b.Property<int>("cnt03llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CNT03_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cnt03llave"), 1L, 1);

                    b.Property<int?>("cnt03activo")
                        .HasColumnType("int")
                        .HasColumnName("CNT03_activo");

                    b.Property<string>("cnt03descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("CNT03_descripcion");

                    b.Property<string>("cnt03nombre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CNT03_nombre");

                    b.Property<int?>("per03llave")
                        .HasColumnType("int")
                        .HasColumnName("PER03_llave");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("cnt03llave");

                    b.HasIndex("per03llave");

                    b.ToTable("CNT03_TipoCliente", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.cnt04ContactoCliente", b =>
                {
                    b.Property<int>("cnt04llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CNT04_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cnt04llave"), 1L, 1);

                    b.Property<int?>("cnt01llave")
                        .HasColumnType("int")
                        .HasColumnName("CNT01_llave");

                    b.Property<int?>("cnt04activo")
                        .HasColumnType("int")
                        .HasColumnName("CNT04_activo");

                    b.Property<int?>("cnt05llave")
                        .HasColumnType("int")
                        .HasColumnName("CNT05_llave");

                    b.Property<int?>("per01llave")
                        .HasColumnType("int")
                        .HasColumnName("PER01_llave");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("cnt04llave");

                    b.HasIndex("cnt01llave");

                    b.HasIndex("cnt05llave");

                    b.ToTable("CNT04_ContactoCliente", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.cnt05TipoContacto", b =>
                {
                    b.Property<int>("cnt05llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CNT05_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cnt05llave"), 1L, 1);

                    b.Property<int?>("cnt05activo")
                        .HasColumnType("int")
                        .HasColumnName("CNT05_activo");

                    b.Property<string>("cnt05descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("CNT05_descripcion");

                    b.Property<string>("cnt05nombre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CNT05_nombre");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("cnt05llave");

                    b.ToTable("CNT05_TipoContacto", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.cnt06ComunicacionCliente", b =>
                {
                    b.Property<int>("cnt06llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CNT06_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cnt06llave"), 1L, 1);

                    b.Property<int?>("cnt01llave")
                        .HasColumnType("int")
                        .HasColumnName("CNT01_llave");

                    b.Property<int?>("cnt06activo")
                        .HasColumnType("int")
                        .HasColumnName("CNT06_activo");

                    b.Property<string>("cnt06Casilla")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("CNT06_casilla");

                    b.Property<string>("cnt06Celular1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CNT06_Celular1");

                    b.Property<string>("cnt06Celular2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CNT06_Celular2");

                    b.Property<string>("cnt06CodigoPostal")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("CNT06_CodigoPostal");

                    b.Property<string>("cnt06Direccion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("CNT06_Direccion");

                    b.Property<string>("cnt06Email")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("CNT06_Email");

                    b.Property<string>("cnt06Fax")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CNT06_Fax");

                    b.Property<string>("cnt06SitioWeb")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CNT06_SitioWeb");

                    b.Property<string>("cnt06Telefono1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CNT06_Telefono1");

                    b.Property<string>("cnt06Telefono2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CNT06_Telefono2");

                    b.Property<int?>("cnt06TieneCasilla")
                        .HasColumnType("int")
                        .HasColumnName("CNT06_TieneCasilla");

                    b.Property<int?>("cnt06TipoMail")
                        .HasColumnType("int")
                        .HasColumnName("CNT06_TipoMail");

                    b.Property<int?>("cnt08llave")
                        .HasColumnType("int")
                        .HasColumnName("CNT08_llave");

                    b.Property<int?>("cnt10llave")
                        .HasColumnType("int")
                        .HasColumnName("CNT10_llave");

                    b.Property<int?>("sist03llave")
                        .HasColumnType("int")
                        .HasColumnName("SIST03_llave");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("cnt06llave");

                    b.HasIndex("cnt01llave");

                    b.HasIndex("cnt08llave");

                    b.HasIndex("cnt10llave");

                    b.HasIndex("sist03llave");

                    b.ToTable("CNT06_ComunicacionCliente", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.cnt07TipoSegmentacion", b =>
                {
                    b.Property<int>("cnt07llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CNT07_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cnt07llave"), 1L, 1);

                    b.Property<int?>("cnt02llave")
                        .HasColumnType("int")
                        .HasColumnName("CNT02_llave");

                    b.Property<int?>("cnt07activo")
                        .HasColumnType("int")
                        .HasColumnName("CNT07_activo");

                    b.Property<string>("cnt07descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("CNT07_descripcion");

                    b.Property<string>("cnt07nombre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CNT07_nombre");

                    b.Property<int?>("cnt18llave")
                        .HasColumnType("int")
                        .HasColumnName("CNT18_llave");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("cnt07llave");

                    b.HasIndex("cnt18llave");

                    b.ToTable("CNT07_TipoSegmentacion", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.cnt08Segmentacion", b =>
                {
                    b.Property<int>("cnt08llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CNT08_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cnt08llave"), 1L, 1);

                    b.Property<int?>("cnt01llave")
                        .HasColumnType("int")
                        .HasColumnName("CNT01_llave");

                    b.Property<int?>("cnt07llave")
                        .HasColumnType("int")
                        .HasColumnName("CNT07_llave");

                    b.Property<int?>("cnt08activo")
                        .HasColumnType("int")
                        .HasColumnName("CNT08_activo");

                    b.Property<int?>("cnt08llavePadre")
                        .HasColumnType("int")
                        .HasColumnName("CNT08_llavePadre");

                    b.Property<string>("cnt08nombre")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("CNT08_nombre");

                    b.Property<int?>("cnt21llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CNT21_llave")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("sist03llave")
                        .HasColumnType("int")
                        .HasColumnName("SIST03_llave");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("cnt08llave");

                    b.HasIndex("cnt01llave");

                    b.HasIndex("cnt07llave");

                    b.HasIndex("cnt08llavePadre");

                    b.ToTable("CNT08_Segmentacion", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.cnt09ComunicacionSegmentacion", b =>
                {
                    b.Property<int>("cnt09llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CNT09_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cnt09llave"), 1L, 1);

                    b.Property<int?>("cnt08llave")
                        .HasColumnType("int")
                        .HasColumnName("CNT08_llave");

                    b.Property<int?>("cnt09activo")
                        .HasColumnType("int")
                        .HasColumnName("CNT09_activo");

                    b.Property<string>("cnt09Casilla")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("CNT09_casilla");

                    b.Property<string>("cnt09Celular1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CNT09_Celular1");

                    b.Property<string>("cnt09Celular2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CNT09_Celular2");

                    b.Property<string>("cnt09CodigoPostal")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("CNT09_CodigoPostal");

                    b.Property<string>("cnt09Direccion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("CNT09_Direccion");

                    b.Property<string>("cnt09Email")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("CNT09_Email");

                    b.Property<string>("cnt09Fax")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CNT09_Fax");

                    b.Property<int?>("cnt09SinCasilla")
                        .HasColumnType("int")
                        .HasColumnName("CNT09_SinCasilla");

                    b.Property<string>("cnt09SitioWeb")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CNT09_SitioWeb");

                    b.Property<string>("cnt09Telefono1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CNT09_Telefono1");

                    b.Property<string>("cnt09Telefono2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CNT09_Telefono2");

                    b.Property<int?>("cnt09TipoMail")
                        .HasColumnType("int")
                        .HasColumnName("CNT09_TipoMail");

                    b.Property<int?>("cnt10llave")
                        .HasColumnType("int")
                        .HasColumnName("CNT10_llave");

                    b.Property<int?>("sist03llave")
                        .HasColumnType("int")
                        .HasColumnName("SIST03_llave");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("cnt09llave");

                    b.HasIndex("cnt08llave");

                    b.ToTable("CNT09_ComunicacionSegmentacion", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.cnt10TipoComunicacion", b =>
                {
                    b.Property<int>("cnt10llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CNT10_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cnt10llave"), 1L, 1);

                    b.Property<int?>("cnt10activo")
                        .HasColumnType("int")
                        .HasColumnName("CNT10_activo");

                    b.Property<string>("cnt10descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("CNT10_descripcion");

                    b.Property<string>("cnt10nombre")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("CNT10_nombre");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("cnt10llave");

                    b.ToTable("CNT10_TipoComunicacion", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.cnt11ContactoSegmentacion", b =>
                {
                    b.Property<int>("cnt11llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CNT11_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cnt11llave"), 1L, 1);

                    b.Property<int?>("cnt05llave")
                        .HasColumnType("int")
                        .HasColumnName("CNT05_llave");

                    b.Property<int?>("cnt08llave")
                        .HasColumnType("int")
                        .HasColumnName("CNT08_llave");

                    b.Property<int?>("cnt11activo")
                        .HasColumnType("int")
                        .HasColumnName("CNT11_activo");

                    b.Property<int?>("per01llave")
                        .HasColumnType("int")
                        .HasColumnName("PER01_llave");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("cnt11llave");

                    b.HasIndex("cnt08llave");

                    b.ToTable("CNT11_ContactoSegmentacion", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.cnt12Empleado", b =>
                {
                    b.Property<int>("cnt12llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CNT12_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cnt12llave"), 1L, 1);

                    b.Property<int?>("cnt01llave")
                        .HasColumnType("int")
                        .HasColumnName("CNT01_llave");

                    b.Property<int?>("cnt08llave")
                        .HasColumnType("int")
                        .HasColumnName("CNT08_llave");

                    b.Property<int?>("cnt12activo")
                        .HasColumnType("int")
                        .HasColumnName("CNT12_activo");

                    b.Property<string>("cnt12Cargo")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("CNT12_Cargo");

                    b.Property<int?>("cnt13llave")
                        .HasColumnType("int")
                        .HasColumnName("CNT13_llave");

                    b.Property<int?>("per01llave")
                        .HasColumnType("int")
                        .HasColumnName("PER01_llave");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("cnt12llave");

                    b.HasIndex("cnt01llave");

                    b.HasIndex("cnt13llave");

                    b.HasIndex("per01llave");

                    b.ToTable("CNT12_Empleados", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.cnt13TipoEmpleado", b =>
                {
                    b.Property<int>("cnt13llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CNT13_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cnt13llave"), 1L, 1);

                    b.Property<int?>("cnt13activo")
                        .HasColumnType("int")
                        .HasColumnName("CNT13_activo");

                    b.Property<string>("cnt13descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("CNT13_descripcion");

                    b.Property<string>("cnt13nombre")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("CNT13_nombre");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("cnt13llave");

                    b.ToTable("CNT13_TipoEmpleado", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.cnt14ClienteLicencia", b =>
                {
                    b.Property<int>("cnt14llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CNT14_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cnt14llave"), 1L, 1);

                    b.Property<int?>("cnt01llave")
                        .HasColumnType("int")
                        .HasColumnName("CNT01_llave");

                    b.Property<bool?>("cnt14activo")
                        .HasColumnType("bit")
                        .HasColumnName("CNT14_activo");

                    b.Property<int?>("cnt14CantUsuarios")
                        .HasColumnType("int")
                        .HasColumnName("CNT14_CantUsuarios");

                    b.Property<DateTime?>("cnt14InicioFecha")
                        .HasColumnType("datetime")
                        .HasColumnName("CNT14_InicioFecha");

                    b.Property<DateTime?>("cnt14TerminoFecha")
                        .HasColumnType("datetime")
                        .HasColumnName("CNT14_TerminoFecha");

                    b.Property<int?>("Lnc01llave")
                        .HasColumnType("int")
                        .HasColumnName("LNC01_llave");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("cnt14llave");

                    b.HasIndex("cnt01llave");

                    b.ToTable("CNT14_ClienteLicencia", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.cnt15EmpleadoLicencia", b =>
                {
                    b.Property<int>("cnt19llave")
                        .HasColumnType("int")
                        .HasColumnName("CNT19_llave");

                    b.Property<int>("cnt12llave")
                        .HasColumnType("int")
                        .HasColumnName("CNT12_llave");

                    b.Property<int?>("cnt15AceptaContrato")
                        .HasColumnType("int")
                        .HasColumnName("CNT15_AceptaContrato");

                    b.Property<DateTime?>("cnt15Fechafirma")
                        .HasColumnType("date")
                        .HasColumnName("CNT15_fechafirma");

                    b.HasKey("cnt19llave", "cnt12llave")
                        .HasName("PK_CNT15_EmpleadoLicencia_1");

                    b.HasIndex("cnt12llave");

                    b.ToTable("CNT15_EmpleadoLicencia", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.cnt16TipoBloqueoCliente", b =>
                {
                    b.Property<int>("cnt16llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CNT16_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cnt16llave"), 1L, 1);

                    b.Property<bool?>("cnt16activo")
                        .HasColumnType("bit")
                        .HasColumnName("CNT16_activo");

                    b.Property<string>("cnt16descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("CNT16_descripcion");

                    b.Property<string>("cnt16nombre")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("CNT16_nombre");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("cnt16llave");

                    b.ToTable("CNT16_TipoBloqueoCliente", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.cnt17Bloqueo", b =>
                {
                    b.Property<int>("cnt17llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CNT17_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cnt17llave"), 1L, 1);

                    b.Property<int?>("Blk01llave")
                        .HasColumnType("int")
                        .HasColumnName("BLK01_llave");

                    b.Property<int?>("cnt01llave")
                        .HasColumnType("int")
                        .HasColumnName("CNT01_llave");

                    b.Property<int?>("cnt08llave")
                        .HasColumnType("int")
                        .HasColumnName("CNT08_llave");

                    b.Property<int?>("cnt14llave")
                        .HasColumnType("int")
                        .HasColumnName("CNT14_llave");

                    b.Property<int?>("cnt16llave")
                        .HasColumnType("int")
                        .HasColumnName("CNT16_llave");

                    b.Property<bool?>("cnt17activo")
                        .HasColumnType("bit")
                        .HasColumnName("CNT17_activo");

                    b.Property<DateTime?>("cnt17InicioBloqueo")
                        .HasColumnType("datetime")
                        .HasColumnName("CNT17_InicioBloqueo");

                    b.Property<DateTime?>("cnt17TerminoBloqueo")
                        .HasColumnType("datetime")
                        .HasColumnName("CNT17_TerminoBloqueo");

                    b.Property<int?>("per01llave")
                        .HasColumnType("int")
                        .HasColumnName("PER01_llave");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("cnt17llave");

                    b.HasIndex("Blk01llave");

                    b.HasIndex("cnt01llave");

                    b.HasIndex("cnt08llave");

                    b.HasIndex("cnt14llave");

                    b.HasIndex("cnt16llave");

                    b.ToTable("CNT17_Bloqueos", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.cnt18NivelSegmentacion", b =>
                {
                    b.Property<int>("cnt18llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CNT18_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cnt18llave"), 1L, 1);

                    b.Property<int?>("cnt18activo")
                        .HasColumnType("int")
                        .HasColumnName("CNT18_activo");

                    b.Property<string>("cnt18Descripccion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("CNT18_Descripccion");

                    b.Property<int?>("cnt18NivelCapa")
                        .HasColumnType("int")
                        .HasColumnName("CNT18_NivelCapa");

                    b.Property<string>("cnt18nombre")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("CNT18_nombre");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("cnt18llave");

                    b.ToTable("CNT18_NivelSegmentacion", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.cnt19LicenciaCliente", b =>
                {
                    b.Property<int>("cnt19llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CNT19_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cnt19llave"), 1L, 1);

                    b.Property<int?>("cnt01llave")
                        .HasColumnType("int")
                        .HasColumnName("CNT01_llave");

                    b.Property<int?>("cnt19activo")
                        .HasColumnType("int")
                        .HasColumnName("CNT19_activo");

                    b.Property<DateTime?>("cnt19FechaInicio")
                        .HasColumnType("datetime")
                        .HasColumnName("CNT19_FechaInicio");

                    b.Property<DateTime?>("cnt19FechaTermino")
                        .HasColumnType("datetime")
                        .HasColumnName("CNT19_FechaTermino");

                    b.Property<string>("cnt19nombreLicencia")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("CNT19_nombreLicencia");

                    b.Property<int?>("cnt19NumeroDias")
                        .HasColumnType("int")
                        .HasColumnName("CNT19_NumeroDias");

                    b.Property<int?>("cnt19NumeroUsuario")
                        .HasColumnType("int")
                        .HasColumnName("CNT19_NumeroUsuario");

                    b.Property<int?>("cnt19ValorReferencial")
                        .HasColumnType("int")
                        .HasColumnName("CNT19_valor_referencial");

                    b.Property<int?>("cnt23llave")
                        .HasColumnType("int")
                        .HasColumnName("CNT23_llave");

                    b.Property<int?>("Lnc01llave")
                        .HasColumnType("int")
                        .HasColumnName("LNC01_llave");

                    b.Property<int?>("Temp02llave")
                        .HasColumnType("int")
                        .HasColumnName("TEMP02_llave");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("cnt19llave");

                    b.HasIndex("cnt01llave");

                    b.ToTable("CNT19_LicenciaCliente", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.cnt20LicenciaServicio", b =>
                {
                    b.Property<int>("cnt19llave")
                        .HasColumnType("int")
                        .HasColumnName("CNT19_llave");

                    b.Property<int>("Serv01llave")
                        .HasColumnType("int")
                        .HasColumnName("SERV01_llave");

                    b.Property<int?>("cnt20Habilitaservicio")
                        .HasColumnType("int")
                        .HasColumnName("CNT20_habilitaservicio");

                    b.Property<int?>("cnt20Valor")
                        .HasColumnType("int")
                        .HasColumnName("CNT20_Valor");

                    b.HasKey("cnt19llave", "Serv01llave");

                    b.ToTable("CNT20_LicenciaServicio", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.cnt21TipoEstacion", b =>
                {
                    b.Property<int>("cnt21llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CNT21_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cnt21llave"), 1L, 1);

                    b.Property<int?>("cnt21activo")
                        .HasColumnType("int")
                        .HasColumnName("CNT21_activo");

                    b.Property<string>("cnt21descripcion")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("CNT21_descripcion");

                    b.Property<string>("cnt21nombre")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("CNT21_nombre");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("cnt21llave");

                    b.ToTable("CNT21_TipoEstacion", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.cnt22EstacionTipoEstacion", b =>
                {
                    b.Property<int>("cnt08llave")
                        .HasColumnType("int")
                        .HasColumnName("CNT08_llave");

                    b.Property<int>("cnt21llave")
                        .HasColumnType("int")
                        .HasColumnName("CNT21_llave");

                    b.Property<int?>("cnt22Estado")
                        .HasColumnType("int")
                        .HasColumnName("CNT22_estado");

                    b.HasKey("cnt08llave", "cnt21llave");

                    b.HasIndex("cnt21llave");

                    b.ToTable("CNT22_Estacion_TipoEstacion", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.cnt23Tipocobro", b =>
                {
                    b.Property<int>("cnt23llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CNT23_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cnt23llave"), 1L, 1);

                    b.Property<int?>("cnt23activo")
                        .HasColumnType("int")
                        .HasColumnName("CNT23_activo");

                    b.Property<string>("cnt23descripcion")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("CNT23_descripcion");

                    b.Property<string>("cnt23nombre")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("CNT23_nombre");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("cnt23llave");

                    b.ToTable("CNT23_Tipocobro", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.cnt24AsociarCuenta", b =>
                {
                    b.Property<int>("cnt01llave")
                        .HasColumnType("int")
                        .HasColumnName("CNT01_llave");

                    b.Property<int>("cnt01Cuentallave")
                        .HasColumnType("int")
                        .HasColumnName("CNT01_Cuenta_llave");

                    b.HasKey("cnt01llave", "cnt01Cuentallave");

                    b.ToTable("CNT24_AsociarCuenta", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Comuna", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsCapital")
                        .HasColumnType("bit");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RegionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.ToTable("Comunas");
                });

            modelBuilder.Entity("mipBackend.Models.Cont01Contacto", b =>
                {
                    b.Property<int>("Cont01llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CONT01_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Cont01llave"), 1L, 1);

                    b.Property<string>("Cont01Apellido")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("CONT01_Apellido");

                    b.Property<string>("Cont01CodigoValidacion")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("CONT01_CodigoValidacion");

                    b.Property<string>("Cont01Direccion")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("CONT01_Direccion");

                    b.Property<string>("Cont01Email")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("CONT01_Email");

                    b.Property<string>("Cont01nombre")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("CONT01_nombre");

                    b.Property<string>("Cont01PeticionContacto")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("CONT01_PeticionContacto");

                    b.Property<string>("Cont01Telefono")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("CONT01_Telefono");

                    b.Property<int?>("Cont01Titulo")
                        .HasColumnType("int")
                        .HasColumnName("CONT01_Titulo");

                    b.Property<int?>("Cont02llave")
                        .HasColumnType("int")
                        .HasColumnName("CONT02_llave");

                    b.Property<DateTime?>("fechaactivacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("fechaactualizacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("fechaeliminacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Cont01llave");

                    b.HasIndex("Cont02llave");

                    b.ToTable("CONT01_Contacto", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Cont02TipoContacto", b =>
                {
                    b.Property<int>("Cont02llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CONT02_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Cont02llave"), 1L, 1);

                    b.Property<string>("Cont02descripcion")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("CONT02_descripcion");

                    b.Property<string>("Cont02nombre")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("CONT02_nombre");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("Cont02llave");

                    b.ToTable("CONT02_TipoContacto", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Conteo01Conteo", b =>
                {
                    b.Property<int>("Conteo01llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CONTEO01_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Conteo01llave"), 1L, 1);

                    b.Property<int?>("Conteo01EstadoConteo")
                        .HasColumnType("int")
                        .HasColumnName("CONTEO01_EstadoConteo");

                    b.Property<int?>("Conteo01EstadoVisado")
                        .HasColumnType("int")
                        .HasColumnName("CONTEO01_EstadoVisado");

                    b.Property<DateTime?>("Conteo01FechaIngreso")
                        .HasColumnType("datetime")
                        .HasColumnName("CONTEO01_FechaIngreso");

                    b.Property<DateTime?>("Conteo01HoraIngreso")
                        .HasColumnType("datetime")
                        .HasColumnName("CONTEO01_HoraIngreso");

                    b.Property<string>("Conteo01Observacion")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("CONTEO01_observacion");

                    b.Property<int?>("Conteo01Tiposistema")
                        .HasColumnType("int")
                        .HasColumnName("CONTEO01_Tiposistema");

                    b.Property<int?>("Conteo01Valor")
                        .HasColumnType("int")
                        .HasColumnName("CONTEO01_Valor");

                    b.Property<string>("Conteo01X")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CONTEO01_x");

                    b.Property<string>("Conteo01Y")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CONTEO01_y");

                    b.Property<DateTime?>("Fechacreacion")
                        .HasColumnType("datetime")
                        .HasColumnName("FECHACREACION");

                    b.Property<string>("Mvl01llave")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MVL01_llave");

                    b.Property<int?>("Temp02llave")
                        .HasColumnType("int")
                        .HasColumnName("TEMP02_llave");

                    b.Property<int?>("Trp01llave")
                        .HasColumnType("int")
                        .HasColumnName("TRP01_llave");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Conteo01llave");

                    b.HasIndex("Temp02llave");

                    b.ToTable("CONTEO01_Conteos", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Conteo02Procesado", b =>
                {
                    b.Property<int>("Conteo02llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CONTEO02_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Conteo02llave"), 1L, 1);

                    b.Property<int?>("cnt08llave")
                        .HasColumnType("int")
                        .HasColumnName("CNT08_llave");

                    b.Property<int?>("Conteo02Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("CONTEO02_Cantidad");

                    b.Property<string>("Conteo02Cotatenado")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CONTEO02_Cotatenado");

                    b.Property<DateTime?>("Conteo02FechaProceso")
                        .HasColumnType("datetime")
                        .HasColumnName("CONTEO02_fechaProceso");

                    b.Property<int?>("Conteo02Promedio")
                        .HasColumnType("int")
                        .HasColumnName("CONTEO02_Promedio");

                    b.Property<int?>("Conteo02Suma")
                        .HasColumnType("int")
                        .HasColumnName("CONTEO02_Suma");

                    b.Property<int?>("esp01llave")
                        .HasColumnType("int")
                        .HasColumnName("ESP01_llave");

                    b.Property<int?>("Temp02llave")
                        .HasColumnType("int")
                        .HasColumnName("TEMP02_llave");

                    b.HasKey("Conteo02llave");

                    b.HasIndex("cnt08llave");

                    b.ToTable("CONTEO02_Procesados", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Conteo03Resumen", b =>
                {
                    b.Property<int>("Conteo03llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CONTEO03_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Conteo03llave"), 1L, 1);

                    b.Property<int?>("cnt08llave")
                        .HasColumnType("int")
                        .HasColumnName("CNT08_llave");

                    b.Property<int?>("Conteo03Estado")
                        .HasColumnType("int")
                        .HasColumnName("CONTEO03_Estado");

                    b.Property<int?>("esp01llave")
                        .HasColumnType("int")
                        .HasColumnName("ESP01_llave");

                    b.Property<int?>("Temp02llave")
                        .HasColumnType("int")
                        .HasColumnName("TEMP02_llave");

                    b.HasKey("Conteo03llave");

                    b.HasIndex("cnt08llave");

                    b.ToTable("CONTEO03_Resumen", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Conteo04ResumenSag", b =>
                {
                    b.Property<int>("Conteo04llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CONTEO04_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Conteo04llave"), 1L, 1);

                    b.Property<int?>("Conteo04Estado")
                        .HasColumnType("int")
                        .HasColumnName("CONTEO04_Estado");

                    b.Property<int?>("esp01llave")
                        .HasColumnType("int")
                        .HasColumnName("ESP01_llave");

                    b.Property<int?>("sist03llave")
                        .HasColumnType("int")
                        .HasColumnName("SIST03_llave");

                    b.Property<int?>("Temp02llave")
                        .HasColumnType("int")
                        .HasColumnName("TEMP02_llave");

                    b.HasKey("Conteo04llave");

                    b.HasIndex("esp01llave");

                    b.HasIndex("sist03llave");

                    b.HasIndex("Temp02llave");

                    b.ToTable("CONTEO04_ResumenSag", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Conteo05ControlReserva", b =>
                {
                    b.Property<int>("Conteo05llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CONTEO05_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Conteo05llave"), 1L, 1);

                    b.Property<string>("Conteo05ColumnaControl")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("CONTEO05_columna_control");

                    b.Property<bool?>("Conteo05Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("CONTEO05_Estado")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("Conteo05EstadoControl")
                        .HasColumnType("int")
                        .HasColumnName("CONTEO05_estado_control");

                    b.Property<DateTime?>("Conteo05Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("CONTEO05_fecha");

                    b.Property<string>("Conteo05IdMovil")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("CONTEO05_id_movil");

                    b.Property<string>("Conteo05Primer")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("CONTEO05_primer");

                    b.Property<string>("Conteo05Segundo")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("CONTEO05_segundo");

                    b.Property<string>("Conteo05TablaControl")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("CONTEO05_tabla_control");

                    b.Property<string>("Conteo05Tercer")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("CONTEO05_tercer");

                    b.Property<int?>("Conteo05ValorControl")
                        .HasColumnType("int")
                        .HasColumnName("CONTEO05_valor_control");

                    b.Property<Guid?>("userid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SECU02_llave");

                    b.Property<DateTime>("fechaactualizacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Conteo05llave");

                    b.HasIndex("userid");

                    b.ToTable("CONTEO05_Control_Reserva", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Ctt01Contrato", b =>
                {
                    b.Property<int>("Ctt01llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CTT01_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Ctt01llave"), 1L, 1);

                    b.Property<int?>("Ctt01activo")
                        .HasColumnType("int")
                        .HasColumnName("CTT01_activo");

                    b.Property<string>("Ctt01ContratoHtml")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CTT01_ContratoHtml");

                    b.Property<string>("Ctt01descripcion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CTT01_descripcion");

                    b.Property<string>("Ctt01nombre")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("CTT01_nombre");

                    b.Property<int?>("Ctt02llave")
                        .HasColumnType("int")
                        .HasColumnName("CTT02_llave");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("Ctt01llave");

                    b.HasIndex("Ctt02llave");

                    b.ToTable("CTT01_Contrato", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Ctt02TipoContrato", b =>
                {
                    b.Property<int>("Ctt02llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CTT02_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Ctt02llave"), 1L, 1);

                    b.Property<int?>("Ctt02activo")
                        .HasColumnType("int")
                        .HasColumnName("CTT02_activo");

                    b.Property<string>("Ctt02descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("CTT02_descripcion");

                    b.Property<string>("Ctt02nombre")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("CTT02_nombre");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("Ctt02llave");

                    b.ToTable("CTT02_TipoContrato", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Ctzr01Cotizacion", b =>
                {
                    b.Property<int>("Ctzr01llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CTZR01_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Ctzr01llave"), 1L, 1);

                    b.Property<int?>("Ctzr01activo")
                        .HasColumnType("int")
                        .HasColumnName("CTZR01_activo");

                    b.Property<string>("Ctzr01Comentario")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CTZR01_comentario");

                    b.Property<DateTime?>("Ctzr01Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("CTZR01_fecha");

                    b.Property<int?>("Lnc01llave")
                        .HasColumnType("int")
                        .HasColumnName("LNC01_llave");

                    b.Property<Guid?>("userid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SECU02_llave");

                    b.HasKey("Ctzr01llave");

                    b.ToTable("CTZR01_Cotizacion", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Eml01BitacoraEmailUsuario", b =>
                {
                    b.Property<int>("Eml01llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EML01_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Eml01llave"), 1L, 1);

                    b.Property<int?>("Eml01activo")
                        .HasColumnType("int")
                        .HasColumnName("EML01_activo");

                    b.Property<string>("Eml01Asunto")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EML01_Asunto");

                    b.Property<string>("Eml01Contenido")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EML01_Contenido");

                    b.Property<string>("Eml01De")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EML01_De");

                    b.Property<DateTime?>("Eml01Envio")
                        .HasColumnType("datetime")
                        .HasColumnName("EML01_Envio");

                    b.Property<int?>("Eml01MailPadre")
                        .HasColumnType("int")
                        .HasColumnName("EML01_MailPAdre");

                    b.Property<string>("Eml01Para")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EML01_Para");

                    b.Property<string>("Eml01Text")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EML01_Text");

                    b.Property<int?>("Eml02llave")
                        .HasColumnType("int")
                        .HasColumnName("EML02_llave");

                    b.Property<int?>("Eml04llave")
                        .HasColumnType("int")
                        .HasColumnName("EML04_llave");

                    b.Property<Guid?>("userid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SECU02_llave");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("Eml01llave")
                        .HasName("PK_EML01_EmailUsuario");

                    b.HasIndex("Eml02llave");

                    b.HasIndex("Eml04llave");

                    b.HasIndex("userid");

                    b.ToTable("EML01_BitacoraEmailUsuario", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Eml02MailBase", b =>
                {
                    b.Property<int>("Eml02llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EML02_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Eml02llave"), 1L, 1);

                    b.Property<int?>("Eml02activo")
                        .HasColumnType("int")
                        .HasColumnName("EML02_activo");

                    b.Property<string>("Eml02Asunto")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EML02_Asunto");

                    b.Property<string>("Eml02CodigoLlamado")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("EML02_CodigoLlamado");

                    b.Property<string>("Eml02ContenidoHtml")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EML02_ContenidoHtml");

                    b.Property<string>("Eml02ContenidoText")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EML02_ContenidoText");

                    b.Property<string>("Eml02descripcion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EML02_descripcion");

                    b.Property<int?>("Eml03llave")
                        .HasColumnType("int")
                        .HasColumnName("EML03_llave");

                    b.Property<int?>("Eml04llave")
                        .HasColumnType("int")
                        .HasColumnName("EML04_llave");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("Eml02llave");

                    b.HasIndex("Eml03llave");

                    b.HasIndex("Eml04llave");

                    b.ToTable("EML02_MailBase", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Eml03TipoMailAccion", b =>
                {
                    b.Property<int>("Eml03llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EML03_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Eml03llave"), 1L, 1);

                    b.Property<int?>("Eml03activo")
                        .HasColumnType("int")
                        .HasColumnName("EML03_activo");

                    b.Property<string>("Eml03descripcion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EML03_descripcion");

                    b.Property<string>("Eml03nombre")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("EML03_nombre");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("Eml03llave")
                        .HasName("PK_EML03_TipoMailAcciones_1");

                    b.ToTable("EML03_TipoMailAcciones", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Eml04ImportanciaMail", b =>
                {
                    b.Property<int>("Eml04llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EML04_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Eml04llave"), 1L, 1);

                    b.Property<int?>("Eml04activo")
                        .HasColumnType("int")
                        .HasColumnName("EML04_activo");

                    b.Property<string>("Eml04descripcion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EML04_descripcion");

                    b.Property<string>("Eml04nombre")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("EML04_nombre");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("Eml04llave");

                    b.ToTable("EML04_ImportanciaMail", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Eml05ArchivoMail", b =>
                {
                    b.Property<int>("Eml05llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EML05_llave");

                    b.Property<int?>("Eml01llave")
                        .HasColumnType("int")
                        .HasColumnName("EML01_llave");

                    b.Property<int?>("Eml05activo")
                        .HasColumnType("int")
                        .HasColumnName("EML05_activo");

                    b.Property<string>("Eml05Archivo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EML05_Archivo");

                    b.Property<string>("Eml05Ruta")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EML05_Ruta");

                    b.Property<int?>("Eml06llave")
                        .HasColumnType("int")
                        .HasColumnName("EML06_llave");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("Eml05llave");

                    b.HasIndex("Eml01llave");

                    b.ToTable("EML05_ArchivoMail", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Eml06TipoArchivo", b =>
                {
                    b.Property<int>("Eml06llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EML06_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Eml06llave"), 1L, 1);

                    b.Property<int?>("Eml06activo")
                        .HasColumnType("int")
                        .HasColumnName("EML06_activo");

                    b.Property<string>("Eml06descripcion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EML06_descripcion");

                    b.Property<string>("Eml06nombre")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("EML06_nombre");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("Eml06llave");

                    b.ToTable("EML06_TipoArchivo", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.esp01especie", b =>
                {
                    b.Property<int>("esp01llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ESP01_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("esp01llave"), 1L, 1);

                    b.Property<int?>("esp01activo")
                        .HasColumnType("int")
                        .HasColumnName("ESP01_activo");

                    b.Property<int?>("esp03llave")
                        .HasColumnType("int")
                        .HasColumnName("ESP03_llave");

                    b.Property<int?>("esp04llave")
                        .HasColumnType("int")
                        .HasColumnName("ESP04_llave");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("esp01llave");

                    b.HasIndex("esp03llave");

                    b.HasIndex("esp04llave");

                    b.ToTable("ESP01_especies", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.esp02Temporadaespecie", b =>
                {
                    b.Property<int>("esp02llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ESP02_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("esp02llave"), 1L, 1);

                    b.Property<int?>("esp01llave")
                        .HasColumnType("int")
                        .HasColumnName("ESP01_llave");

                    b.Property<int?>("esp02activo")
                        .HasColumnType("int")
                        .HasColumnName("ESP02_activo");

                    b.Property<DateTime?>("esp02InicioTemporada")
                        .HasColumnType("datetime")
                        .HasColumnName("ESP02_InicioTemporada");

                    b.Property<int?>("esp02Mexico")
                        .HasColumnType("int")
                        .HasColumnName("ESP02_Mexico");

                    b.Property<int?>("esp02Sag")
                        .HasColumnType("int")
                        .HasColumnName("ESP02_Sag");

                    b.Property<DateTime?>("esp02TerminoTemporada")
                        .HasColumnType("datetime")
                        .HasColumnName("ESP02_TerminoTemporada");

                    b.Property<int?>("Temp01llave")
                        .HasColumnType("int")
                        .HasColumnName("TEMP01_llave");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("esp02llave");

                    b.HasIndex("esp01llave");

                    b.HasIndex("Temp01llave");

                    b.ToTable("ESP02_Temporadaespecie", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.esp03especieBase", b =>
                {
                    b.Property<int>("esp03llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ESP03_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("esp03llave"), 1L, 1);

                    b.Property<int?>("esp03activo")
                        .HasColumnType("int")
                        .HasColumnName("ESP03_activo");

                    b.Property<string>("esp03descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("ESP03_descripcion");

                    b.Property<string>("esp03EstadoRegistro")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ESP03_EstadoRegistro");

                    b.Property<string>("esp03ImgGrande")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ESP03_ImgGrande");

                    b.Property<string>("esp03ImgPequenia")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ESP03_ImgPequenia");

                    b.Property<string>("esp03nombre")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("ESP03_nombre");

                    b.Property<int?>("esp03Union")
                        .HasColumnType("int")
                        .HasColumnName("ESP03_Union");

                    b.Property<int?>("esp08llave")
                        .HasColumnType("int")
                        .HasColumnName("ESP08_llave");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("esp03llave");

                    b.HasIndex("esp08llave");

                    b.ToTable("ESP03_especieBase", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.esp04EstadoDanio", b =>
                {
                    b.Property<int>("esp04llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ESP04_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("esp04llave"), 1L, 1);

                    b.Property<int?>("esp04activo")
                        .HasColumnType("int")
                        .HasColumnName("ESP04_activo");

                    b.Property<string>("esp04descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("ESP04_descripcion");

                    b.Property<string>("esp04nombre")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("ESP04_nombre");

                    b.Property<int?>("esp06llave")
                        .HasColumnType("int")
                        .HasColumnName("ESP06_llave");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("esp04llave");

                    b.HasIndex("esp06llave");

                    b.ToTable("ESP04_EstadoDanio", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.esp05Umbral", b =>
                {
                    b.Property<int>("esp05llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ESP05_LLave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("esp05llave"), 1L, 1);

                    b.Property<int?>("esp01llave")
                        .HasColumnType("int")
                        .HasColumnName("ESP01_llave");

                    b.Property<int?>("esp05activo")
                        .HasColumnType("int")
                        .HasColumnName("ESP05_activo");

                    b.Property<string>("esp05Color")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ESP05_Color");

                    b.Property<int?>("esp05MaxUmbral")
                        .HasColumnType("int")
                        .HasColumnName("ESP05_MaxUmbral");

                    b.Property<int?>("esp05MinUmbral")
                        .HasColumnType("int")
                        .HasColumnName("ESP05_MinUmbral");

                    b.Property<int?>("esp09llave")
                        .HasColumnType("int")
                        .HasColumnName("ESP09_llave");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("esp05llave");

                    b.HasIndex("esp01llave");

                    b.HasIndex("esp09llave");

                    b.ToTable("ESP05_Umbral", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.esp06MedidaUmbral", b =>
                {
                    b.Property<int>("esp06llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ESP06_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("esp06llave"), 1L, 1);

                    b.Property<int?>("esp06activo")
                        .HasColumnType("int")
                        .HasColumnName("ESP06_activo");

                    b.Property<string>("esp06descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("ESP06_descripcion");

                    b.Property<string>("esp06nombre")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("ESP06_nombre");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("esp06llave");

                    b.ToTable("ESP06_MedidaUmbral", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.esp07Union", b =>
                {
                    b.Property<int?>("esp03llave")
                        .HasColumnType("int")
                        .HasColumnName("ESP03_llave");

                    b.Property<int?>("esp03llaveUnion")
                        .HasColumnType("int")
                        .HasColumnName("ESP03_llaveUnion");

                    b.HasKey("esp03llave", "esp03llaveUnion");

                    b.ToTable("ESP07_Union", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.esp08TipoBase", b =>
                {
                    b.Property<int>("esp08llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ESP08_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("esp08llave"), 1L, 1);

                    b.Property<int?>("esp08activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ESP08_activo")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("esp08descripcion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ESP08_descripcion");

                    b.Property<string>("esp08nombre")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("ESP08_nombre");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("esp08llave");

                    b.ToTable("ESP08_TipoBase", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.esp09TipoBaseUmbral", b =>
                {
                    b.Property<int>("esp09llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ESP09_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("esp09llave"), 1L, 1);

                    b.Property<int?>("esp09activo")
                        .HasColumnType("int")
                        .HasColumnName("ESP09_activo");

                    b.Property<string>("esp09descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("ESP09_descripcion");

                    b.Property<string>("esp09nombre")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("ESP09_nombre");

                    b.Property<int?>("esp09Orden")
                        .HasColumnType("int")
                        .HasColumnName("ESP09_Orden");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("esp09llave");

                    b.ToTable("ESP09_TipoBaseUmbral", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.esp10TipoRegla", b =>
                {
                    b.Property<int>("esp10llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ESP10_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("esp10llave"), 1L, 1);

                    b.Property<int?>("esp10activo")
                        .HasColumnType("int")
                        .HasColumnName("ESP10_activo");

                    b.Property<string>("esp10descripcion")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("ESP10_descripcion");

                    b.Property<string>("esp10nombre")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("ESP10_nombre");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("esp10llave");

                    b.ToTable("ESP10_TipoRegla", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.esp11ReglaGrafico", b =>
                {
                    b.Property<int>("esp11llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ESP11_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("esp11llave"), 1L, 1);

                    b.Property<int?>("esp03llave")
                        .HasColumnType("int")
                        .HasColumnName("ESP03_llave");

                    b.Property<int?>("esp10llave")
                        .HasColumnType("int")
                        .HasColumnName("ESP10_llave");

                    b.Property<int?>("esp11Estado")
                        .HasColumnType("int")
                        .HasColumnName("ESP11_Estado");

                    b.Property<string>("esp11nombre")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("ESP11_nombre");

                    b.Property<string>("esp11Signo1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ESP11_Signo1");

                    b.Property<string>("esp11Signo2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ESP11_Signo2");

                    b.Property<string>("esp11SignoResultado")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ESP11_SignoResultado");

                    b.Property<int?>("esp11Valor1")
                        .HasColumnType("int")
                        .HasColumnName("ESP11_Valor1");

                    b.Property<int?>("esp11Valor2")
                        .HasColumnType("int")
                        .HasColumnName("ESP11_Valor2");

                    b.Property<int?>("esp11ValorResultado")
                        .HasColumnType("int")
                        .HasColumnName("ESP11_ValorResultado");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("esp11llave");

                    b.HasIndex("esp10llave");

                    b.ToTable("ESP11_ReglaGrafico", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Frm01TipoFormulario", b =>
                {
                    b.Property<int>("Frm01llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FRM01_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Frm01llave"), 1L, 1);

                    b.Property<int?>("Frm01activo")
                        .HasColumnType("int")
                        .HasColumnName("FRM01_activo");

                    b.Property<string>("Frm01nombre")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("FRM01_nombre");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("Frm01llave");

                    b.ToTable("FRM01_TipoFormulario", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Frm02Formulario", b =>
                {
                    b.Property<int>("Frm02llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FRM02_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Frm02llave"), 1L, 1);

                    b.Property<int?>("Eml01llave")
                        .HasColumnType("int")
                        .HasColumnName("EML01_llave");

                    b.Property<int?>("Frm01llave")
                        .HasColumnType("int")
                        .HasColumnName("FRM01_llave");

                    b.Property<int?>("Frm02activo")
                        .HasColumnType("int")
                        .HasColumnName("FRM02_activo");

                    b.Property<string>("Frm02Celular")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FRM02_Celular");

                    b.Property<string>("Frm02Ciudad")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("FRM02_Ciudad");

                    b.Property<string>("Frm02Direccion")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("FRM02_Direccion");

                    b.Property<string>("Frm02Empresa")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("FRM02_Empresa");

                    b.Property<int?>("Frm02EstadoRespuesta")
                        .HasColumnType("int")
                        .HasColumnName("FRM02_EstadoRespuesta");

                    b.Property<string>("Frm02Mail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FRM02_Mail");

                    b.Property<string>("Frm02Mensaje")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FRM02_Mensaje");

                    b.Property<string>("Frm02nombre")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("FRM02_nombre");

                    b.Property<string>("Frm02Telefono")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FRM02_Telefono");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("Frm02llave");

                    b.HasIndex("Eml01llave");

                    b.HasIndex("Frm01llave");

                    b.ToTable("FRM02_Formulario", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Grfc01GraficoGenerado", b =>
                {
                    b.Property<int>("Grfc01llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("GRFC01_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Grfc01llave"), 1L, 1);

                    b.Property<string>("Grfc01CodigoGrafico")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("GRFC01_codigo_grafico");

                    b.Property<int?>("Grfc01Estado")
                        .HasColumnType("int")
                        .HasColumnName("GRFC01_estado");

                    b.Property<DateTime?>("Grfc01FechaGrafico")
                        .HasColumnType("datetime")
                        .HasColumnName("GRFC01_FechaGrafico");

                    b.Property<int?>("Grfc02llave")
                        .HasColumnType("int")
                        .HasColumnName("GRFC02_llave");

                    b.Property<Guid?>("userid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SECU02_llave");

                    b.HasKey("Grfc01llave");

                    b.ToTable("GRFC01_GraficoGenerado", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Grfc02TipoGrafico", b =>
                {
                    b.Property<int>("Grfc02llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("GRFC02_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Grfc02llave"), 1L, 1);

                    b.Property<int?>("Grfc02activo")
                        .HasColumnType("int")
                        .HasColumnName("GRFC02_activo");

                    b.Property<string>("Grfc02descripcion")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("GRFC02_descripcion");

                    b.Property<string>("Grfc02nombre")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("GRFC02_nombre");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("Grfc02llave");

                    b.ToTable("GRFC02_TipoGrafico", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Grfc03RespaldoGrafico", b =>
                {
                    b.Property<int>("Grfc03llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("GRFC03_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Grfc03llave"), 1L, 1);

                    b.Property<int?>("cnt08llave")
                        .HasColumnType("int")
                        .HasColumnName("CNT08_llave");

                    b.Property<int?>("esp03llave")
                        .HasColumnType("int")
                        .HasColumnName("ESP03_llave");

                    b.Property<int?>("Grfc03Estado")
                        .HasColumnType("int")
                        .HasColumnName("GRFC03_Estado");

                    b.Property<DateTime?>("Grfc03UltimaFecha")
                        .HasColumnType("datetime")
                        .HasColumnName("GRFC03_ultimaFecha");

                    b.Property<string>("Grfc03XmlDatos")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("GRFC03_xmlDatos");

                    b.Property<int?>("Temp02llave")
                        .HasColumnType("int")
                        .HasColumnName("TEMP02_llave");

                    b.HasKey("Grfc03llave");

                    b.ToTable("GRFC03_respaldoGrafico", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Inmueble", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Precio")
                        .HasColumnType("int");

                    b.Property<Guid?>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Inmuebles");
                });

            modelBuilder.Entity("mipBackend.Models.Ins01Inscripcion", b =>
                {
                    b.Property<int>("Ins01llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("INS01_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Ins01llave"), 1L, 1);

                    b.Property<int?>("Ins01activo")
                        .HasColumnType("int")
                        .HasColumnName("INS01_activo");

                    b.Property<string>("Ins01Apellido")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("INS01_Apellido");

                    b.Property<string>("Ins01Direccion")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("INS01_Direccion");

                    b.Property<string>("Ins01Email")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("INS01_Email");

                    b.Property<string>("Ins01Empresa")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("INS01_Empresa");

                    b.Property<DateTime?>("Ins01FechaInscripcion")
                        .HasColumnType("datetime")
                        .HasColumnName("INS01_FechaInscripcion");

                    b.Property<DateTime?>("Ins01FechaNacimiento")
                        .HasColumnType("datetime")
                        .HasColumnName("INS01_FechaNacimiento");

                    b.Property<string>("Ins01nombre")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("INS01_nombre");

                    b.Property<string>("Ins01Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("INS01_Password");

                    b.Property<int?>("Ins01Rut")
                        .HasColumnType("int")
                        .HasColumnName("INS01_Rut");

                    b.Property<string>("Ins01Telefono")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("INS01_Telefono");

                    b.Property<string>("Ins01UserName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("INS01_UserName");

                    b.Property<DateTime?>("Ins01fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("INS01_fechaactivacion");

                    b.Property<int?>("per02llave")
                        .HasColumnType("int")
                        .HasColumnName("PER02_llave");

                    b.Property<int?>("sist03llave")
                        .HasColumnType("int")
                        .HasColumnName("SIST03_llave");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("Ins01llave");

                    b.ToTable("INS01_Inscripcion", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Ins02RecuperarClave", b =>
                {
                    b.Property<int>("Ins02llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("INS02_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Ins02llave"), 1L, 1);

                    b.Property<string>("Ins02ClaveTemporal")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("INS02_ClaveTemporal");

                    b.Property<int?>("Ins02Estado")
                        .HasColumnType("int")
                        .HasColumnName("INS02_Estado");

                    b.Property<DateTime?>("Ins02FechaRecupera")
                        .HasColumnType("datetime")
                        .HasColumnName("INS02_FechaRecupera");

                    b.Property<Guid?>("userid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SECU02_llave");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("Ins02llave");

                    b.HasIndex("Ins02Estado");

                    b.ToTable("INS02_RecuperarClave", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Lnc01Licencia", b =>
                {
                    b.Property<int>("Lnc01llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LNC01_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Lnc01llave"), 1L, 1);

                    b.Property<int?>("Lnc01activo")
                        .HasColumnType("int")
                        .HasColumnName("LNC01_activo");

                    b.Property<string>("Lnc01descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("LNC01_descripcion");

                    b.Property<string>("Lnc01Html")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("LNC01_HTML");

                    b.Property<string>("Lnc01Imagen")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("LNC01_Imagen");

                    b.Property<int?>("Lnc01MaximoUsuarios")
                        .HasColumnType("int")
                        .HasColumnName("LNC01_MaximoUsuarios");

                    b.Property<string>("Lnc01nombre")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("LNC01_nombre");

                    b.Property<int?>("Lnc01NumeroDias")
                        .HasColumnType("int")
                        .HasColumnName("LNC01_NumeroDias");

                    b.Property<string>("Lnc01TextoDias")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("LNC01_TextoDias");

                    b.Property<int?>("Lnc01VisibleUsuario")
                        .HasColumnType("int")
                        .HasColumnName("LNC01_VisibleUsuario");

                    b.Property<int?>("Lnc04llave")
                        .HasColumnType("int")
                        .HasColumnName("LNC04_llave");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("Lnc01llave");

                    b.ToTable("LNC01_Licencias", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Lnc02ServiciosLicencia", b =>
                {
                    b.Property<int>("Lnc01llave")
                        .HasColumnType("int")
                        .HasColumnName("LNC01_llave");

                    b.Property<int>("Serv01llave")
                        .HasColumnType("int")
                        .HasColumnName("SERV01_llave");

                    b.Property<int?>("Lnc02activo")
                        .HasColumnType("int")
                        .HasColumnName("LNC02_activo");

                    b.Property<int?>("Lnc02EsIlimitado")
                        .HasColumnType("int")
                        .HasColumnName("LNC02_EsIlimitado");

                    b.Property<int?>("Lnc02NumeroElemento")
                        .HasColumnType("int")
                        .HasColumnName("LNC02_NumeroElemento");

                    b.Property<int?>("Lnc02permiteComparar")
                        .HasColumnType("int")
                        .HasColumnName("LNC02_permiteComparar");

                    b.HasKey("Lnc01llave", "Serv01llave")
                        .HasName("PK_LNC02_ServiciosLicencia_1");

                    b.HasIndex("Serv01llave");

                    b.ToTable("LNC02_ServiciosLicencia", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Lnc03LicenciaContrato", b =>
                {
                    b.Property<int>("Lnc01llave")
                        .HasColumnType("int")
                        .HasColumnName("LNC01_llave");

                    b.Property<int>("Ctt01llave")
                        .HasColumnType("int")
                        .HasColumnName("CTT01_llave");

                    b.Property<int?>("Lnc03activo")
                        .HasColumnType("int")
                        .HasColumnName("LNC03_activo");

                    b.Property<int?>("Lnc03FirmaSimpre")
                        .HasColumnType("int")
                        .HasColumnName("LNC03_FirmaSimpre");

                    b.HasKey("Lnc01llave", "Ctt01llave")
                        .HasName("PK_LNC03_LicenciaContrato_1");

                    b.HasIndex("Ctt01llave");

                    b.ToTable("LNC03_LicenciaContrato", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Lnc04TipoLicencia", b =>
                {
                    b.Property<int>("Lnc04llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LNC04_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Lnc04llave"), 1L, 1);

                    b.Property<int?>("Lnc04activo")
                        .HasColumnType("int")
                        .HasColumnName("LNC04_activo");

                    b.Property<string>("Lnc04descripcion")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("LNC04_descripcion");

                    b.Property<string>("Lnc04nombre")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("LNC04_nombre");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("Lnc04llave");

                    b.ToTable("LNC04_TipoLicencia", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Lnc05ValorLicencia", b =>
                {
                    b.Property<int>("Lnc05llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LNC05_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Lnc05llave"), 1L, 1);

                    b.Property<int?>("Lnc01llave")
                        .HasColumnType("int")
                        .HasColumnName("LNC01_llave");

                    b.Property<int?>("Lnc05Inicio")
                        .HasColumnType("int")
                        .HasColumnName("LNC05_Inicio");

                    b.Property<int?>("Lnc05Termino")
                        .HasColumnType("int")
                        .HasColumnName("LNC05_Termino");

                    b.Property<int?>("Lnc05Valor")
                        .HasColumnType("int")
                        .HasColumnName("LNC05_Valor");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.HasKey("Lnc05llave");

                    b.HasIndex("Lnc01llave");

                    b.ToTable("LNC05_valorLicencia", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Lnc06Cobertura", b =>
                {
                    b.Property<int>("Lnc01llave")
                        .HasColumnType("int")
                        .HasColumnName("LNC01_llave");

                    b.Property<int>("sist03llave")
                        .HasColumnType("int")
                        .HasColumnName("SIST03_llave");

                    b.HasKey("Lnc01llave", "sist03llave")
                        .HasName("PK_LNC05_Cobertura");

                    b.ToTable("LNC06_Cobertura", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Lnc07Control", b =>
                {
                    b.Property<int>("Lnc01llave")
                        .HasColumnType("int")
                        .HasColumnName("LNC01_llave");

                    b.Property<int>("esp03llave")
                        .HasColumnType("int")
                        .HasColumnName("ESP03_llave");

                    b.HasKey("Lnc01llave", "esp03llave");

                    b.ToTable("LNC07_Control", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Log01Bitacora", b =>
                {
                    b.Property<int>("Log01llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LOG01_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Log01llave"), 1L, 1);

                    b.Property<int?>("Log01activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LOG01_activo")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Log01Clase")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("LOG01_Clase");

                    b.Property<string>("Log01Contenido")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("LOG01_Contenido");

                    b.Property<byte[]>("Log01ElementoSerializado")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("LOG01_elemento_serializado");

                    b.Property<string>("Log01Info")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("LOG01_Info");

                    b.Property<int?>("Log01Objeto")
                        .HasColumnType("int")
                        .HasColumnName("LOG01_objeto");

                    b.Property<int?>("Log03llave")
                        .HasColumnType("int")
                        .HasColumnName("LOG03_llave");

                    b.Property<Guid?>("userid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SECU02_llave");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("Log01llave");

                    b.HasIndex("Log03llave");

                    b.ToTable("LOG01_Bitacora", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Log02TipoBitacora", b =>
                {
                    b.Property<Guid>("Log02llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LOG02_llave")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("Log02activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LOG02_activo")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Log02descripcion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("LOG02_descripcion");

                    b.Property<int?>("Log02EsRazor")
                        .HasColumnType("int")
                        .HasColumnName("LOG02_EsRazor");

                    b.Property<int?>("Log02Essistema")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LOG02_Essistema")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Log02Info")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("LOG02_Info");

                    b.Property<string>("Log02nombre")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("LOG02_nombre");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("Log02llave")
                        .HasName("PK__LOG02_Ti__EA456AA523FE4082");

                    b.ToTable("LOG02_TipoBitacora", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Log03MensajeBitacora", b =>
                {
                    b.Property<int>("Log03llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LOG03_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Log03llave"), 1L, 1);

                    b.Property<Guid?>("Log02llave")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LOG02_llave");

                    b.Property<string>("Log03AccesoRapido")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("LOG03_AccesoRapido");

                    b.Property<int?>("Log03activo")
                        .HasColumnType("int")
                        .HasColumnName("LOG03_activo");

                    b.Property<string>("Log03descripcion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("LOG03_descripcion");

                    b.Property<string>("Log03Info")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("LOG03_Info");

                    b.Property<string>("Log03Mensaje")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("LOG03_Mensaje");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("Log03llave");

                    b.HasIndex("Log02llave");

                    b.ToTable("LOG03_MensajeBitacora", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Men01sistema", b =>
                {
                    b.Property<int>("Men01llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MEN01_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Men01llave"), 1L, 1);

                    b.Property<string>("Men01Accion")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("MEN01_Accion");

                    b.Property<string>("Men01Area")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("MEN01_Area");

                    b.Property<string>("Men01Control")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("MEN01_Control");

                    b.Property<string>("Men01descripcion")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("MEN01_descripcion");

                    b.Property<string>("Men01IconoUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MEN01_IconoUrl");

                    b.Property<int?>("Men01llavePadre")
                        .HasColumnType("int")
                        .HasColumnName("MEN01_llave_padre");

                    b.Property<bool>("Men01Principal")
                        .HasColumnType("bit")
                        .HasColumnName("MEN01_principal");

                    b.Property<string>("Men01Titulo")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("MEN01_titulo");

                    b.Property<string>("Men01Tooltip")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("MEN01_tooltip");

                    b.Property<string>("Men01Url")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("MEN01_url");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("Men01llave")
                        .HasName("PK__MEN01_Si__4F35303B75CD617E");

                    b.ToTable("MEN01_sistema", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Mnt01Monitor", b =>
                {
                    b.Property<int>("Mnt01llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MNT01_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Mnt01llave"), 1L, 1);

                    b.Property<int?>("Mnt01activo")
                        .HasColumnType("int")
                        .HasColumnName("MNT01_activo");

                    b.Property<string>("Mnt01Cargo")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("MNT01_Cargo");

                    b.Property<DateTime?>("Mnt01Iniciolabores")
                        .HasColumnType("datetime")
                        .HasColumnName("MNT01_iniciolabores");

                    b.Property<int?>("Mnt04llave")
                        .HasColumnType("int")
                        .HasColumnName("MNT04_llave");

                    b.Property<int?>("per01llave")
                        .HasColumnType("int")
                        .HasColumnName("PER01_llave");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("Mnt01llave");

                    b.HasIndex("Mnt04llave");

                    b.ToTable("MNT01_Monitores", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Mnt03periodosTrampa", b =>
                {
                    b.Property<int>("Mnt01llave")
                        .HasColumnType("int")
                        .HasColumnName("MNT01_llave");

                    b.Property<int>("Trp01llave")
                        .HasColumnType("int")
                        .HasColumnName("TRP01_llave");

                    b.Property<int>("Temp02llave")
                        .HasColumnType("int")
                        .HasColumnName("TEMP02_llave");

                    b.Property<int?>("Mnt03activo")
                        .HasColumnType("int")
                        .HasColumnName("MNT03_activo");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.HasKey("Mnt01llave", "Trp01llave", "Temp02llave")
                        .HasName("PK_MNT02_especiesAsignadas");

                    b.HasIndex("Temp02llave");

                    b.ToTable("MNT03_periodosTrampas", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Mnt04TipoMonitor", b =>
                {
                    b.Property<int>("Mnt04llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MNT04_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Mnt04llave"), 1L, 1);

                    b.Property<int?>("Mnt04activo")
                        .HasColumnType("int")
                        .HasColumnName("MNT04_activo");

                    b.Property<string>("Mnt04descripcion")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("MNT04_descripcion");

                    b.Property<string>("Mnt04nombre")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("MNT04_nombre");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("Mnt04llave")
                        .HasName("PK_MNT05_TipoBase");

                    b.ToTable("MNT04_TipoMonitor", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Mvl01AccesoMovil", b =>
                {
                    b.Property<int?>("Mvl01DiasUmbralEdicion")
                        .HasColumnType("int")
                        .HasColumnName("MVL01_dias_umbral_edicion");

                    b.Property<bool?>("Mvl01EditaFechaMonitoreo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("MVL01_edita_fecha_monitoreo")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("Mvl01EstaBloqueado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("MVL01_esta_bloqueado")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("Mvl01FechaMensaje")
                        .HasColumnType("datetime")
                        .HasColumnName("MVL01_fecha_mensaje");

                    b.Property<DateTime?>("Mvl01FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("MVL01_fecha_registro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("Mvl01FechaUltimaActividad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("MVL01_fecha_ultima_actividad")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("Mvl01FechaUltimaSincro")
                        .HasColumnType("datetime")
                        .HasColumnName("MVL01_fecha_ultima_sincro");

                    b.Property<DateTime?>("Mvl01FechaUltimoAcceso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("MVL01_fecha_ultimo_acceso")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("Mvl01IdUsuario")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("MVL01_id_usuario");

                    b.Property<string>("Mvl01llave")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("MVL01_llave");

                    b.Property<string>("Mvl01MensajeMovil")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MVL01_mensaje_movil");

                    b.Property<string>("Mvl01NumeroMovil")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("MVL01_numero_movil");

                    b.Property<string>("Mvl01sistemaAndroid")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("MVL01_sistema_android");

                    b.Property<int?>("Mvl01TamanoBasedatosCliente")
                        .HasColumnType("int")
                        .HasColumnName("MVL01_tamano_basedatos_cliente");

                    b.Property<int?>("Mvl01UbicacionActividadX")
                        .HasColumnType("int")
                        .HasColumnName("MVL01_ubicacion_actividad_x");

                    b.Property<int?>("Mvl01UbicacionActividadY")
                        .HasColumnType("int")
                        .HasColumnName("MVL01_ubicacion_actividad_y");

                    b.Property<string>("Mvl01VersionAndroid")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("MVL01_version_android");

                    b.Property<string>("Mvl01VersionAplicacion")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("MVL01_version_aplicacion");

                    b.Property<string>("Mvl01VersionDescarga")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("MVL01_version_descarga");

                    b.Property<DateTime?>("fechaactualizacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.ToTable("MVL01_AccesoMovil", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Mvl02TablaSincronizacion", b =>
                {
                    b.Property<DateTime?>("FechaUltimaActualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("Fecha_UltimaActualizacion");

                    b.Property<string>("nombreTabla")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("nombre_Tabla");

                    b.Property<Guid>("userid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SECU02_llave");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime");

                    b.ToTable("MVL02_TablaSincronizacion", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Mvl03RegistroAcceso", b =>
                {
                    b.Property<int>("Mvl03llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MVL03_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Mvl03llave"), 1L, 1);

                    b.Property<Guid?>("ApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("EmailUsuario")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("email_usuario");

                    b.Property<int?>("EstadoUsuario")
                        .HasColumnType("int")
                        .HasColumnName("estado_usuario");

                    b.Property<string>("IsAnonymous")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<bool?>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<string>("LastActivityDate")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("LoweredUserName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MobileAlias")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("Mvl03Fechacreacion")
                        .HasColumnType("datetime")
                        .HasColumnName("MVL03_FECHACREACION");

                    b.Property<string>("nombreUsuario")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("nombre_usuario");

                    b.Property<string>("Password")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PasswordFormat")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<Guid?>("PasswordSalt")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("per01llave")
                        .HasColumnType("int")
                        .HasColumnName("PER01_llave");

                    b.Property<bool?>("Secu02activo")
                        .HasColumnType("bit")
                        .HasColumnName("SECU02_activo");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Mvl03llave");

                    b.ToTable("MVL03_RegistroAcceso", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Obsc01ObservacionCampo", b =>
                {
                    b.Property<int>("Obsc01llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OBSC01_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Obsc01llave"), 1L, 1);

                    b.Property<int?>("esp08llave")
                        .HasColumnType("int")
                        .HasColumnName("ESP08_llave");

                    b.Property<int?>("Obsc01activo")
                        .HasColumnType("int")
                        .HasColumnName("OBSC01_activo");

                    b.Property<DateTime?>("Obsc01FechaObservacion")
                        .HasColumnType("datetime")
                        .HasColumnName("OBSC01_FechaObservacion");

                    b.Property<int?>("Obsc01Interesado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OBSC01_interesado")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Obsc01nombre")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("OBSC01_nombre");

                    b.Property<string>("Obsc01Resumen")
                        .HasMaxLength(1000)
                        .HasColumnType("nchar(1000)")
                        .HasColumnName("OBSC01_Resumen")
                        .IsFixedLength();

                    b.Property<string>("Obsc01UrlPdf")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("OBSC01_UrlPdf");

                    b.Property<int?>("Temp02llave")
                        .HasColumnType("int")
                        .HasColumnName("TEMP02_llave");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("Obsc01llave");

                    b.HasIndex("esp08llave");

                    b.HasIndex("Temp02llave");

                    b.ToTable("OBSC01_ObservacionCampo", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Obsc02ServicioPostcosecha", b =>
                {
                    b.Property<int>("Obsc02llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OBSC02_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Obsc02llave"), 1L, 1);

                    b.Property<int?>("esp08llave")
                        .HasColumnType("int")
                        .HasColumnName("ESP08_llave");

                    b.Property<int?>("Obsc02activo")
                        .HasColumnType("int")
                        .HasColumnName("OBSC02_activo");

                    b.Property<DateTime?>("Obsc02Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("OBSC02_Fecha");

                    b.Property<string>("Obsc02nombre")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("OBSC02_nombre");

                    b.Property<string>("Obsc02Resumen")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("OBSC02_Resumen");

                    b.Property<string>("Obsc02UrlPdf")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("OBSC02_UrlPdf");

                    b.Property<int?>("Temp02llave")
                        .HasColumnType("int")
                        .HasColumnName("TEMP02_llave");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("Obsc02llave");

                    b.ToTable("OBSC02_ServicioPostcosecha", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Pbcd01Publicidad", b =>
                {
                    b.Property<int>("Pbcd01llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PBCD01_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Pbcd01llave"), 1L, 1);

                    b.Property<int?>("Pbcd01activo")
                        .HasColumnType("int")
                        .HasColumnName("PBCD01_activo");

                    b.Property<string>("Pbcd01FrasePrincipal")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("PBCD01_FrasePrincipal");

                    b.Property<string>("Pbcd01FraseSecundaria")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("PBCD01_FraseSecundaria");

                    b.Property<string>("Pbcd01Imagennombre")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("PBCD01_Imagennombre");

                    b.Property<string>("Pbcd01Objetico")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("PBCD01_Objetico");

                    b.Property<string>("Pbcd01Problema")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("PBCD01_Problema");

                    b.Property<string>("Pbcd01Producto")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("PBCD01_Producto");

                    b.Property<string>("Pbcd01SecuenciaHtml")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("PBCD01_SecuenciaHtml");

                    b.Property<int?>("Pbcd02llave")
                        .HasColumnType("int")
                        .HasColumnName("PBCD02_llave");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("Pbcd01llave");

                    b.HasIndex("Pbcd02llave");

                    b.ToTable("PBCD01_Publicidad", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Pbcd02TipoPublicidad", b =>
                {
                    b.Property<int>("Pbcd02llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PBCD02_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Pbcd02llave"), 1L, 1);

                    b.Property<int?>("Pbcd02activo")
                        .HasColumnType("int")
                        .HasColumnName("PBCD02_activo");

                    b.Property<string>("Pbcd02descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("PBCD02_descripcion");

                    b.Property<string>("Pbcd02nombre")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("PBCD02_nombre");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("Pbcd02llave");

                    b.ToTable("PBCD02_TipoPublicidad", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Pbcd03Programacion", b =>
                {
                    b.Property<int>("Pbcd03llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PBCD03_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Pbcd03llave"), 1L, 1);

                    b.Property<int?>("Pbcd01llave")
                        .HasColumnType("int")
                        .HasColumnName("PBCD01_llave");

                    b.Property<int?>("Pbcd03activo")
                        .HasColumnType("int")
                        .HasColumnName("PBCD03_activo");

                    b.Property<DateTime?>("Pbcd03InicioFecha")
                        .HasColumnType("datetime")
                        .HasColumnName("PBCD03_InicioFecha");

                    b.Property<DateTime?>("Pbcd03TerminoFecha")
                        .HasColumnType("datetime")
                        .HasColumnName("PBCD03_TerminoFecha");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("Pbcd03llave");

                    b.HasIndex("Pbcd01llave");

                    b.ToTable("PBCD03_Programacion", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.per01persona", b =>
                {
                    b.Property<int>("per01llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PER01_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("per01llave"), 1L, 1);

                    b.Property<int?>("per01activo")
                        .HasColumnType("int")
                        .HasColumnName("PER01_activo");

                    b.Property<int?>("per01AnioIngreso")
                        .HasColumnType("int")
                        .HasColumnName("PER01_AnioIngreso");

                    b.Property<string>("per01Cargo")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("PER01_Cargo");

                    b.Property<DateTime?>("per01FechaNacimiento")
                        .HasColumnType("datetime")
                        .HasColumnName("PER01_FechaNacimiento");

                    b.Property<string>("per01Giro")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("PER01_Giro");

                    b.Property<string>("per01nombreFantasia")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("PER01_nombreFantasia");

                    b.Property<string>("per01nombreRazon")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("PER01_nombreRazon");

                    b.Property<int?>("per01Rut")
                        .HasColumnType("int")
                        .HasColumnName("PER01_Rut");

                    b.Property<int?>("per02llave")
                        .HasColumnType("int")
                        .HasColumnName("PER02_llave");

                    b.Property<int?>("per03llave")
                        .HasColumnType("int")
                        .HasColumnName("PER03_llave");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("per01llave");

                    b.HasIndex("per02llave");

                    b.HasIndex("per03llave");

                    b.ToTable("PER01_persona", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.per02Genero", b =>
                {
                    b.Property<int>("per02llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PER02_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("per02llave"), 1L, 1);

                    b.Property<int?>("per02activo")
                        .HasColumnType("int")
                        .HasColumnName("PER02_activo");

                    b.Property<string>("per02Genero1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PER02_Genero");

                    b.Property<int?>("per02Orden")
                        .HasColumnType("int")
                        .HasColumnName("PER02_Orden");

                    b.Property<string>("per02Sexo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PER02_Sexo");

                    b.Property<string>("per02Titulo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PER02_Titulo");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("per02llave");

                    b.ToTable("PER02_Genero", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.per03Tipopersona", b =>
                {
                    b.Property<int>("per03llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PER03_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("per03llave"), 1L, 1);

                    b.Property<int?>("per03activo")
                        .HasColumnType("int")
                        .HasColumnName("PER03_activo");

                    b.Property<string>("per03descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("PER03_descripcion");

                    b.Property<string>("per03nombre")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("PER03_nombre");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("per03llave");

                    b.ToTable("PER03_Tipopersona", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.per04TipoComunicacion", b =>
                {
                    b.Property<int>("per04llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PER04_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("per04llave"), 1L, 1);

                    b.Property<int?>("per04activo")
                        .HasColumnType("int")
                        .HasColumnName("PER04_activo");

                    b.Property<string>("per04descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("PER04_descripcion");

                    b.Property<string>("per04nombre")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("PER04_nombre");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("per04llave");

                    b.ToTable("PER04_TipoComunicacion", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.per05Comunicacion", b =>
                {
                    b.Property<int>("per01llave")
                        .HasColumnType("int")
                        .HasColumnName("PER01_llave");

                    b.Property<int>("per04llave")
                        .HasColumnType("int")
                        .HasColumnName("PER04_llave");

                    b.Property<int>("per03llave")
                        .HasColumnType("int")
                        .HasColumnName("PER03_llave");

                    b.Property<string>("per05Casilla")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("PER05_casilla");

                    b.Property<string>("per05Celular1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PER05_Celular1");

                    b.Property<string>("per05Celular2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PER05_Celular2");

                    b.Property<string>("per05CodigoPostal")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("PER05_CodigoPostal");

                    b.Property<string>("per05Direccion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("PER05_Direccion");

                    b.Property<string>("per05Email")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("PER05_Email");

                    b.Property<string>("per05Fax")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PER05_Fax");

                    b.Property<string>("per05SitioWeb")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PER05_SitioWeb");

                    b.Property<string>("per05Telefono1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PER05_Telefono1");

                    b.Property<string>("per05Telefono2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PER05_Telefono2");

                    b.Property<int?>("per05TieneCasilla")
                        .HasColumnType("int")
                        .HasColumnName("PER05_TieneCasilla");

                    b.Property<int?>("sist03llave")
                        .HasColumnType("int")
                        .HasColumnName("SIST03_llave");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("per01llave", "per04llave", "per03llave");

                    b.HasIndex("per04llave");

                    b.HasIndex("per03llave", "per04llave");

                    b.ToTable("PER05_Comunicacion", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.per06TipopersonaComunicacion", b =>
                {
                    b.Property<int>("per03llave")
                        .HasColumnType("int")
                        .HasColumnName("PER03_llave");

                    b.Property<int>("per04llave")
                        .HasColumnType("int")
                        .HasColumnName("PER04_llave");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.HasKey("per03llave", "per04llave");

                    b.HasIndex("per04llave");

                    b.ToTable("PER06_TipopersonaComunicacion", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.per07personaUsuario", b =>
                {
                    b.Property<int>("per07llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PER07_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("per07llave"), 1L, 1);

                    b.Property<int?>("per01llave")
                        .HasColumnType("int")
                        .HasColumnName("PER01_llave");

                    b.Property<int?>("per07activo")
                        .HasColumnType("int")
                        .HasColumnName("PER07_activo");

                    b.Property<Guid?>("userid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SECU02_llave");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("per07llave");

                    b.HasIndex("per01llave");

                    b.ToTable("PER07_personaUsuario", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Pgo01CompraLicencia", b =>
                {
                    b.Property<int>("Pgo1llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PGO1_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Pgo1llave"), 1L, 1);

                    b.Property<int?>("cnt19llave")
                        .HasColumnType("int")
                        .HasColumnName("CNT19_llave");

                    b.Property<DateTime?>("Fechacompra")
                        .HasColumnType("datetime")
                        .HasColumnName("FECHACOMPRA");

                    b.Property<int?>("Pgo01activo")
                        .HasColumnType("int")
                        .HasColumnName("PGO01_activo");

                    b.Property<int?>("Pgo01TotalCompra")
                        .HasColumnType("int")
                        .HasColumnName("PGO01_TotalCompra");

                    b.Property<int?>("Pgo03llave")
                        .HasColumnType("int")
                        .HasColumnName("PGO03_llave");

                    b.HasKey("Pgo1llave");

                    b.HasIndex("cnt19llave");

                    b.HasIndex("Pgo03llave");

                    b.ToTable("PGO01_CompraLicencia", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Pgo02NotificarPagoLicencia", b =>
                {
                    b.Property<int>("Pgo02llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PGO02_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Pgo02llave"), 1L, 1);

                    b.Property<DateTime?>("Fechanotificacionpago")
                        .HasColumnType("datetime")
                        .HasColumnName("FECHANOTIFICACIONPAGO");

                    b.Property<int?>("Pgo01llave")
                        .HasColumnType("int")
                        .HasColumnName("PGO01_llave");

                    b.Property<int?>("Pgo02activo")
                        .HasColumnType("int")
                        .HasColumnName("PGO02_activo");

                    b.Property<string>("Pgo02DocumentoAdjunto")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PGO02_DocumentoAdjunto");

                    b.HasKey("Pgo02llave");

                    b.HasIndex("Pgo01llave");

                    b.ToTable("PGO02_NotificarPagoLicencia", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Pgo03TipoPagoLicencia", b =>
                {
                    b.Property<int>("Pgo03llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PGO03_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Pgo03llave"), 1L, 1);

                    b.Property<int?>("Pgo03activo")
                        .HasColumnType("int")
                        .HasColumnName("PGO03_activo");

                    b.Property<string>("Pgo03descripcion")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("PGO03_descripcion");

                    b.Property<string>("Pgo03nombre")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("PGO03_nombre");

                    b.HasKey("Pgo03llave")
                        .HasName("PK_PGO03_FormaPago");

                    b.ToTable("PGO03_TipoPagoLicencia", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.prf01perfil", b =>
                {
                    b.Property<int>("prf01llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PRF01_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("prf01llave"), 1L, 1);

                    b.Property<int?>("prf01activo")
                        .HasColumnType("int")
                        .HasColumnName("PRF01_activo");

                    b.Property<int?>("prf05llave")
                        .HasColumnType("int")
                        .HasColumnName("PRF05_llave");

                    b.Property<Guid?>("userid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SECU02_llave");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("prf01llave");

                    b.HasIndex("prf05llave");

                    b.HasIndex("userid");

                    b.ToTable("PRF01_perfiles", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.prf03Plantilla", b =>
                {
                    b.Property<int>("prf03llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PRF03_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("prf03llave"), 1L, 1);

                    b.Property<int?>("prf03activo")
                        .HasColumnType("int")
                        .HasColumnName("PRF03_activo");

                    b.Property<string>("prf03descripcion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PRF03_descripcion");

                    b.Property<string>("prf03EstadoRegistro")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PRF03_estadoRegistro");

                    b.Property<string>("prf03nombre")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("PRF03_nombre");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("prf03llave")
                        .HasName("PK_PRF03_PlantillaFlujo");

                    b.ToTable("PRF03_Plantilla", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.prf04PlantillaFlujo", b =>
                {
                    b.Property<int>("prf04llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PRF04_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("prf04llave"), 1L, 1);

                    b.Property<int>("prf03llave")
                        .HasColumnType("int")
                        .HasColumnName("PRF03_llave");

                    b.Property<int>("wkf01llave")
                        .HasColumnType("int")
                        .HasColumnName("WKF01_llave");

                    b.HasKey("prf04llave");

                    b.HasIndex("wkf01llave");

                    b.HasIndex("prf03llave");

                    b.ToTable("PRF04_PlantillaFlujo", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.prf05TipoAsignacionUsuario", b =>
                {
                    b.Property<int>("prf05llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PRF05_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("prf05llave"), 1L, 1);

                    b.Property<int?>("prf05activo")
                        .HasColumnType("int")
                        .HasColumnName("PRF05_activo");

                    b.Property<string>("prf05descripcion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PRF05_descripcion");

                    b.Property<string>("prf05nombre")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("PRF05_nombre");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("prf05llave");

                    b.ToTable("PRF05_TipoAsignacionUsuario", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.prf06permisosUsuario", b =>
                {
                    b.Property<int>("prf01llave")
                        .HasColumnType("int")
                        .HasColumnName("PRF01_llave");

                    b.Property<int>("wkf06llave")
                        .HasColumnType("int")
                        .HasColumnName("WKF06_llave");

                    b.Property<int?>("prf06activo")
                        .HasColumnType("int")
                        .HasColumnName("PRF06_activo");

                    b.HasKey("prf01llave", "wkf06llave");

                    b.HasIndex("wkf06llave");

                    b.ToTable("PRF06_permisosUsuario", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Prm01Seguridad", b =>
                {
                    b.Property<int>("Prm01llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PRM01_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Prm01llave"), 1L, 1);

                    b.Property<int?>("Prm01activo")
                        .HasColumnType("int")
                        .HasColumnName("PRM01_activo");

                    b.Property<string>("Prm01descripcion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PRM01_descripcion");

                    b.Property<string>("Prm01nombre")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("PRM01_nombre");

                    b.Property<string>("Prm01UrlError")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("PRM01_UrlError");

                    b.Property<int?>("Prm01Valor")
                        .HasColumnType("int")
                        .HasColumnName("PRM01_valor");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("Prm01llave");

                    b.ToTable("PRM01_Seguridad", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Orden")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Regiones");
                });

            modelBuilder.Entity("mipBackend.Models.Secu01Rol", b =>
                {
                    b.Property<Guid>("Secu01llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SECU01_llave")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool?>("Secu01activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("SECU01_activo")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Secu01descripcion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SECU01_descripcion");

                    b.Property<string>("Secu01Info")
                        .HasColumnType("xml")
                        .HasColumnName("SECU01_Info");

                    b.Property<string>("Secu01nombre")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("SECU01_nombre");

                    b.Property<int?>("Secu01Orden")
                        .HasColumnType("int")
                        .HasColumnName("SECU01_Orden");

                    b.Property<DateTime?>("fechaactualizacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("Secu01llave")
                        .HasName("PK__SECU01_R__2E718C9349B338EE");

                    b.ToTable("SECU01_Rol", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Secu02Usuario", b =>
                {
                    b.Property<Guid>("userid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SECU02_llave")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool?>("Secu02activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("SECU02_activo")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("Secu02Bloqueado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("SECU02_Bloqueado")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Secu02Clave")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("SECU02_Clave");

                    b.Property<string>("Secu02ComplementoClave")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("SECU02_ComplementoClave");

                    b.Property<string>("Secu02Email")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("SECU02_Email");

                    b.Property<DateTime?>("Secu02FechaBloqueo")
                        .HasColumnType("datetime")
                        .HasColumnName("SECU02_FechaBloqueo");

                    b.Property<DateTime?>("Secu02FechaCambioPass")
                        .HasColumnType("datetime")
                        .HasColumnName("SECU02_FechaCambioPass");

                    b.Property<string>("Secu02Movil")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("SECU02_Movil");

                    b.Property<string>("Secu02Pregunta")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SECU02_Pregunta");

                    b.Property<string>("Secu02Respuesta")
                        .HasMaxLength(600)
                        .HasColumnType("nvarchar(600)")
                        .HasColumnName("SECU02_Respuesta");

                    b.Property<string>("Secu02Usuario1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("SECU02_Usuario");

                    b.Property<Guid?>("Secu04TipoEncriptacion")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SECU04_TipoEncriptacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("userid")
                        .HasName("PK__SECU02_U__B709E3CA34F4CE22");

                    b.HasIndex("Secu04TipoEncriptacion");

                    b.ToTable("SECU02_Usuario", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Secu03TipoAcceso", b =>
                {
                    b.Property<Guid>("Secu03llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SECU03_llave")
                        .HasDefaultValueSql("(newsequentialid())");

                    b.Property<bool?>("Secu03activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("SECU03_activo")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Secu03descripcion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SECU03_descripcion");

                    b.Property<string>("Secu03Info")
                        .HasColumnType("xml")
                        .HasColumnName("SECU03_Info");

                    b.Property<string>("Secu03nombre")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("SECU03_nombre");

                    b.Property<DateTime?>("fechaactualizacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("Secu03llave")
                        .HasName("PK__SECU03_T__7B6F14E7DEC70462");

                    b.ToTable("SECU03_TipoAcceso", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Secu04TipoEncriptacion", b =>
                {
                    b.Property<Guid>("Secu04llave")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SECU04_llave");

                    b.Property<bool?>("Secu04activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("SECU04_activo")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Secu04Clase")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SECU04_Clase");

                    b.Property<string>("Secu04Funcion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SECU04_Funcion");

                    b.Property<string>("Secu04Info")
                        .HasColumnType("xml")
                        .HasColumnName("SECU04_Info");

                    b.Property<string>("Secu04nombre")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("SECU04_nombre");

                    b.Property<string>("Secu04Parametros")
                        .HasColumnType("xml")
                        .HasColumnName("SECU04_Parametros");

                    b.Property<string>("Secu04Proyecto")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SECU04_Proyecto");

                    b.Property<DateTime?>("fechaactualizacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("Secu04llave")
                        .HasName("PK__SECU04_T__3412AACF89203574");

                    b.ToTable("SECU04_TipoEncriptacion", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Secu05UsuarioAcceso", b =>
                {
                    b.Property<Guid>("Secu05llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SECU05_llave")
                        .HasDefaultValueSql("(newsequentialid())");

                    b.Property<Guid?>("userid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SECU02_llave");

                    b.Property<Guid?>("Secu03TipoAcceso")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SECU03_TipoAcceso");

                    b.Property<bool?>("Secu05activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("SECU05_activo")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("Secu05Bloqueado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("SECU05_Bloqueado")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("Secu05FechaBloqueo")
                        .HasColumnType("datetime")
                        .HasColumnName("SECU05_FechaBloqueo");

                    b.Property<DateTime?>("Secu05FechaMensaje")
                        .HasColumnType("datetime")
                        .HasColumnName("SECU05_FechaMensaje");

                    b.Property<DateTime?>("Secu05FechaUltAcceso")
                        .HasColumnType("datetime")
                        .HasColumnName("SECU05_FechaUltAcceso");

                    b.Property<DateTime?>("Secu05FechaUltActividad")
                        .HasColumnType("datetime")
                        .HasColumnName("SECU05_FechaUltActividad");

                    b.Property<DateTime?>("Secu05FechaUltDescarga")
                        .HasColumnType("datetime")
                        .HasColumnName("SECU05_FechaUltDescarga");

                    b.Property<bool?>("Secu05ForzarDescarga")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("SECU05_ForzarDescarga")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Secu05Info")
                        .HasColumnType("xml")
                        .HasColumnName("SECU05_Info");

                    b.Property<string>("Secu05llaveAcceso")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("SECU05_llaveAcceso");

                    b.Property<string>("Secu05Mensaje")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("SECU05_Mensaje");

                    b.Property<string>("Secu05Soacceso")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("SECU05_SOAcceso");

                    b.Property<string>("Secu05VersionActual")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("SECU05_VersionActual");

                    b.Property<string>("Secu05VersionDescarga")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("SECU05_VersionDescarga");

                    b.Property<DateTime?>("fechaactualizacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("Secu05llave")
                        .HasName("PK__SECU05_U__2980F8C26FA412CE");

                    b.HasIndex("userid");

                    b.HasIndex("Secu03TipoAcceso");

                    b.ToTable("SECU05_UsuarioAcceso", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Secu06UsuarioRol", b =>
                {
                    b.Property<Guid>("Secu01llave")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SECU01_llave");

                    b.Property<Guid>("userid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SECU02_llave");

                    b.Property<bool?>("Secu06activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("SECU06_activo")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("fechaactualizacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("Secu01llave", "userid");

                    b.HasIndex("userid");

                    b.ToTable("SECU06_UsuarioRol", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Secu07Aplicacion", b =>
                {
                    b.Property<Guid>("Secu07llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SECU07_llave")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool?>("Secu07activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("SECU07_activo")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Secu07descripcion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SECU07_descripcion");

                    b.Property<string>("Secu07Info")
                        .HasColumnType("xml")
                        .HasColumnName("SECU07_Info");

                    b.Property<string>("Secu07nombre")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("SECU07_nombre");

                    b.Property<DateTime?>("fechaactualizacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("Secu07llave")
                        .HasName("PK__SECU07_A__148FCE85966FFC87");

                    b.ToTable("SECU07_Aplicacion", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Secu08UsuarioAplicacion", b =>
                {
                    b.Property<Guid>("userid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SECU02_llave");

                    b.Property<Guid>("Secu07llave")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SECU07_llave");

                    b.Property<bool?>("Secu08activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("SECU08_activo")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Secu08Info")
                        .HasColumnType("xml")
                        .HasColumnName("SECU08_Info");

                    b.Property<string>("Secu08Observacion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SECU08_Observacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("userid", "Secu07llave")
                        .HasName("PK_UsuarioAplicacion");

                    b.HasIndex("Secu07llave");

                    b.ToTable("SECU08_UsuarioAplicacion", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Secu10Accesopermitido", b =>
                {
                    b.Property<int>("Secu10llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SECU10_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Secu10llave"), 1L, 1);

                    b.Property<bool?>("activo")
                        .HasColumnType("bit")
                        .HasColumnName("activo");

                    b.Property<Guid?>("userid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SECU02_llave");

                    b.Property<Guid?>("Secu03llave")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SECU03_llave");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("Secu10llave");

                    b.HasIndex("userid");

                    b.HasIndex("Secu03llave");

                    b.ToTable("SECU10_Accesopermitido", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Secu11Tipoperfil", b =>
                {
                    b.Property<int>("prf02llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PRF02_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("prf02llave"), 1L, 1);

                    b.Property<DateTime?>("Fechaactulizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("FECHAACTULIZACION");

                    b.Property<string>("prf02descripcion")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("PRF02_descripcion");

                    b.Property<string>("prf02nombre")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("PRF02_nombre");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("prf02llave");

                    b.ToTable("SECU11_Tipoperfil", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Sercl01ServiciosCliente", b =>
                {
                    b.Property<int>("Sercl01llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SERCL01_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sercl01llave"), 1L, 1);

                    b.Property<int?>("cnt01llave")
                        .HasColumnType("int")
                        .HasColumnName("CNT01_llave");

                    b.Property<int?>("cnt08llave")
                        .HasColumnType("int")
                        .HasColumnName("CNT08_llave");

                    b.Property<int?>("cnt19llave")
                        .HasColumnType("int")
                        .HasColumnName("CNT19_llave");

                    b.Property<int?>("Conteo03llave")
                        .HasColumnType("int")
                        .HasColumnName("CONTEO03_llave");

                    b.Property<int?>("esp03llave")
                        .HasColumnType("int")
                        .HasColumnName("ESP03_llave");

                    b.Property<int?>("esp04llave")
                        .HasColumnType("int")
                        .HasColumnName("ESP04_llave");

                    b.Property<int?>("esp08llave")
                        .HasColumnType("int")
                        .HasColumnName("ESP08_llave");

                    b.Property<int?>("Sercl01Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("SERCL01_cantidad");

                    b.Property<int?>("Sercl01Costo")
                        .HasColumnType("int")
                        .HasColumnName("SERCL01_Costo");

                    b.Property<int?>("Sercl01TipoGrafico")
                        .HasColumnType("int")
                        .HasColumnName("SERCL01_TipoGrafico");

                    b.Property<int?>("Serv01llave")
                        .HasColumnType("int")
                        .HasColumnName("SERV01_llave");

                    b.Property<int?>("sist03llave")
                        .HasColumnType("int")
                        .HasColumnName("SIST03_llave");

                    b.Property<int?>("Temp02llave")
                        .HasColumnType("int")
                        .HasColumnName("TEMP02_llave");

                    b.Property<int?>("sist04llave")
                        .HasColumnType("int")
                        .HasColumnName("SISt04_llave");

                    b.HasKey("Sercl01llave");

                    b.ToTable("SERCL01_ServiciosClientes", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Sercl02MuestreoFruta", b =>
                {
                    b.Property<int>("Sercl02llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SERCL02_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sercl02llave"), 1L, 1);

                    b.Property<int?>("Sercl01llave")
                        .HasColumnType("int")
                        .HasColumnName("SERCL01_llave");

                    b.Property<int?>("Sercl02activo")
                        .HasColumnType("int")
                        .HasColumnName("SERCL02_activo");

                    b.Property<DateTime?>("Sercl02Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("SERCL02_Fecha");

                    b.Property<string>("Sercl02nombre")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("SERCL02_nombre");

                    b.Property<string>("Sercl02UrlPdf")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("SERCL02_UrlPdf");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("Sercl02llave");

                    b.HasIndex("Sercl01llave");

                    b.ToTable("SERCL02_MuestreoFruta", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Sercltemp01ServiciosClientesTemporal", b =>
                {
                    b.Property<int>("Sercltemp01llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SERCLTEMP01_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sercltemp01llave"), 1L, 1);

                    b.Property<int?>("cntemp01llave")
                        .HasColumnType("int")
                        .HasColumnName("CNTEMP01_llave");

                    b.Property<int?>("cntemp02llave")
                        .HasColumnType("int")
                        .HasColumnName("CNTEMP02_llave");

                    b.Property<int?>("Conteo03llave")
                        .HasColumnType("int")
                        .HasColumnName("CONTEO03_llave");

                    b.Property<int?>("Sercltemp01TipoGrafico")
                        .HasColumnType("int")
                        .HasColumnName("SERCLTEMP01_TipoGrafico");

                    b.Property<int?>("Temp02llave")
                        .HasColumnType("int")
                        .HasColumnName("TEMP02_llave");

                    b.HasKey("Sercltemp01llave");

                    b.HasIndex("Conteo03llave");

                    b.ToTable("SERCLTEMP01_ServiciosClientes_Temporal", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Serv01Servicio", b =>
                {
                    b.Property<int>("Serv01llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SERV01_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Serv01llave"), 1L, 1);

                    b.Property<int?>("Serv01activo")
                        .HasColumnType("int")
                        .HasColumnName("SERV01_activo");

                    b.Property<string>("Serv01descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("SERV01_descripcion");

                    b.Property<string>("Serv01nombre")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("SERV01_nombre");

                    b.Property<int?>("Serv02llave")
                        .HasColumnType("int")
                        .HasColumnName("SERV02_llave");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("Serv01llave");

                    b.HasIndex("Serv02llave");

                    b.ToTable("SERV01_Servicio", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Serv02TipoServicio", b =>
                {
                    b.Property<int>("Serv02llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SERV02_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Serv02llave"), 1L, 1);

                    b.Property<int?>("Serv02activo")
                        .HasColumnType("int")
                        .HasColumnName("SERV02_activo");

                    b.Property<string>("Serv02descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("SERV02_descripcion");

                    b.Property<string>("Serv02nombre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SERV02_nombre");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("Serv02llave");

                    b.ToTable("SERV02_TipoServicio", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.setSelect", b =>
                {
                    b.Property<int>("Value")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");


                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Value");

                    b.ToTable("SetSelects");
                });

            modelBuilder.Entity("mipBackend.Models.sist01sistema", b =>
                {
                    b.Property<int>("sist01llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SIST01_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("sist01llave"), 1L, 1);

                    b.Property<bool?>("sist01activo")
                        .HasColumnType("bit")
                        .HasColumnName("SIST01_activo");

                    b.Property<string>("sist01descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("SIST01_descripcion");

                    b.Property<bool?>("sist01EsPublica")
                        .HasColumnType("bit")
                        .HasColumnName("SIST01_EsPublica");

                    b.Property<bool?>("sist01EsServicios")
                        .HasColumnType("bit")
                        .HasColumnName("SIST01_EsServicios");

                    b.Property<string>("sist01nombre")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("SIST01_nombre");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("sist01llave");

                    b.ToTable("SIST01_sistema", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.sist02Zona", b =>
                {
                    b.Property<int>("sist02llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SIST02_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("sist02llave"), 1L, 1);

                    b.Property<int?>("sist02activo")
                        .HasColumnType("int")
                        .HasColumnName("SIST02_activo");

                    b.Property<string>("sist02descripcion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SIST02_descripcion");

                    b.Property<string>("sist02Estadoregistro")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SIST02_estadoregistro");

                    b.Property<string>("sist02nombre")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("SIST02_nombre");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("sist02llave");

                    b.ToTable("SIST02_Zona", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.sist03Comuna", b =>
                {
                    b.Property<int>("sist03llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SIST03_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("sist03llave"), 1L, 1);

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.Property<int?>("sist03activo")
                        .HasColumnType("int")
                        .HasColumnName("SIST03_activo");

                    b.Property<int?>("sist03capital")
                        .HasColumnType("int")
                        .HasColumnName("SIST03_Capital");

                    b.Property<string>("sist03descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("SIST03_descripcion");

                    b.Property<string>("sist03nombre")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("SIST03_nombre");

                    b.Property<int?>("sist04llave")
                        .HasColumnType("int")
                        .HasColumnName("SIST04_llave");

                    b.HasKey("sist03llave");

                    b.HasIndex("sist04llave");

                    b.ToTable("SIST03_Comuna", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.sist04Region", b =>
                {
                    b.Property<int>("sist04llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SIST04_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("sist04llave"), 1L, 1);

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.Property<int?>("sist04activo")
                        .HasColumnType("int")
                        .HasColumnName("SIST04_activo");

                    b.Property<string>("sist04descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("SIST04_descripcion");

                    b.Property<string>("sist04nombre")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("SIST04_nombre");

                    b.Property<int?>("sist04orden")
                        .HasColumnType("int")
                        .HasColumnName("SIST04_Orden");

                    b.HasKey("sist04llave");

                    b.ToTable("SIST04_Region", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.sist05EstadoRegistro", b =>
                {
                    b.Property<int>("sist05llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SIST05_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("sist05llave"), 1L, 1);

                    b.Property<int?>("sist03activo")
                        .HasColumnType("int")
                        .HasColumnName("SIST03_activo");

                    b.Property<string>("sist03descripcion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SIST03_descripcion");

                    b.Property<string>("sist05nombre")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("SIST05_nombre");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("sist05llave");

                    b.ToTable("SIST05_EstadoRegistro", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.sist06EstadoGrid", b =>
                {
                    b.Property<int>("sist06llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SIST06_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("sist06llave"), 1L, 1);

                    b.Property<int?>("sist06activo")
                        .HasColumnType("int")
                        .HasColumnName("SIST06_activo");

                    b.Property<string>("sist06nombre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SIST06_nombre");

                    b.HasKey("sist06llave");

                    b.ToTable("SIST06_EstadoGrid", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.sist08ContactoUsuario", b =>
                {
                    b.Property<int>("sist08llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SIST08_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("sist08llave"), 1L, 1);

                    b.Property<int?>("per02llave")
                        .HasColumnType("int")
                        .HasColumnName("PER02_llave");

                    b.Property<string>("sist08Celular")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("SIST08_Celular");

                    b.Property<string>("sist08Comentario")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SIST08_Comentario");

                    b.Property<string>("sist08Correo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SIST08_Correo");

                    b.Property<string>("sist08Empresa")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("SIST08_Empresa");

                    b.Property<int?>("sist08Estado")
                        .HasColumnType("int")
                        .HasColumnName("SIST08_Estado");

                    b.Property<DateTime?>("sist08Fechacreacion")
                        .HasColumnType("datetime")
                        .HasColumnName("SIST08_FECHACREACION");

                    b.Property<string>("sist08nombre")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("SIST08_nombre");

                    b.Property<string>("sist08Telefono")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("SIST08_Telefono");

                    b.HasKey("sist08llave");

                    b.HasIndex("per02llave");

                    b.ToTable("SIST08_ContactoUsuario", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Temp01Temporada", b =>
                {
                    b.Property<int>("Temp01llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TEMP01_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Temp01llave"), 1L, 1);

                    b.Property<int?>("Temp01activo")
                        .HasColumnType("int")
                        .HasColumnName("TEMP01_activo");

                    b.Property<string>("Temp01descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("TEMP01_descripcion");

                    b.Property<DateTime?>("Temp01MaxFecha")
                        .HasColumnType("datetime")
                        .HasColumnName("TEMP01_MaxFecha");

                    b.Property<int?>("Temp01MaxMes")
                        .HasColumnType("int")
                        .HasColumnName("TEMP01_MaxMes");

                    b.Property<DateTime?>("Temp01MinFecha")
                        .HasColumnType("datetime")
                        .HasColumnName("TEMP01_MinFecha");

                    b.Property<int?>("Temp01MinMes")
                        .HasColumnType("int")
                        .HasColumnName("TEMP01_MinMes");

                    b.Property<string>("Temp01nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("TEMP01_nombre");

                    b.Property<int?>("Temp01periodo")
                        .HasColumnType("int")
                        .HasColumnName("TEMP01_periodo");

                    b.Property<int?>("Temp02llave")
                        .HasColumnType("int")
                        .HasColumnName("TEMP02_llave");

                    b.Property<int?>("Temp03llave")
                        .HasColumnType("int")
                        .HasColumnName("TEMP03_llave");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("Temp01llave");

                    b.HasIndex("Temp02llave");

                    b.HasIndex("Temp03llave");

                    b.ToTable("TEMP01_Temporada", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Temp02TemporadaBase", b =>
                {
                    b.Property<int>("Temp02llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TEMP02_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Temp02llave"), 1L, 1);

                    b.Property<int?>("Temp02activo")
                        .HasColumnType("int")
                        .HasColumnName("TEMP02_activo");

                    b.Property<string>("Temp02descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("TEMP02_descripcion");

                    b.Property<string>("Temp02nombre")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("TEMP02_nombre");

                    b.Property<int?>("Temp02Predeterminada")
                        .HasColumnType("int")
                        .HasColumnName("TEMP02_Predeterminada");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("Temp02llave");

                    b.ToTable("TEMP02_TemporadaBase", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Temp03Segmentacion", b =>
                {
                    b.Property<int>("Temp03llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TEMP03_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Temp03llave"), 1L, 1);

                    b.Property<int?>("Temp03activo")
                        .HasColumnType("int")
                        .HasColumnName("TEMP03_activo");

                    b.Property<string>("Temp03descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("TEMP03_descripcion");

                    b.Property<string>("Temp03nombre")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("TEMP03_nombre");

                    b.Property<int?>("Temp03NumeroMeses")
                        .HasColumnType("int")
                        .HasColumnName("TEMP03_NumeroMeses");

                    b.Property<int?>("Temp03NumeroSegmentosTotal")
                        .HasColumnType("int")
                        .HasColumnName("TEMP03_NumeroSegmentosTotal");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("Temp03llave");

                    b.ToTable("TEMP03_Segmentacion", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Trp01Trampa", b =>
                {
                    b.Property<int>("Trp01llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TRP01_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Trp01llave"), 1L, 1);

                    b.Property<int?>("cnt08llave")
                        .HasColumnType("int")
                        .HasColumnName("CNT08_llave");

                    b.Property<int?>("esp01llave")
                        .HasColumnType("int")
                        .HasColumnName("ESP01_llave");

                    b.Property<int?>("Trp01activo")
                        .HasColumnType("int")
                        .HasColumnName("TRP01_activo");

                    b.Property<string>("Trp01nombre")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("TRP01_nombre");

                    b.Property<int?>("Trp01Numero")
                        .HasColumnType("int")
                        .HasColumnName("TRP01_Numero");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("Trp01llave");

                    b.HasIndex("cnt08llave");

                    b.HasIndex("esp01llave");

                    b.ToTable("TRP01_Trampa", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Trp02Temporada", b =>
                {
                    b.Property<int>("Trp02llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TRP02_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Trp02llave"), 1L, 1);

                    b.Property<bool?>("Temp02activo")
                        .HasColumnType("bit")
                        .HasColumnName("TEMP02_activo");

                    b.Property<int>("Temp02llave")
                        .HasColumnType("int")
                        .HasColumnName("TEMP02_llave");

                    b.Property<int>("Trp01llave")
                        .HasColumnType("int")
                        .HasColumnName("TRP01_llave");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("Trp02llave");

                    b.HasIndex("Temp02llave");

                    b.HasIndex("Trp01llave");

                    b.ToTable("TRP02_Temporada", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Trp03Geocordenada", b =>
                {
                    b.Property<int>("Trp01llave")
                        .HasColumnType("int")
                        .HasColumnName("TRP01_llave");

                    b.Property<int>("Temp02llave")
                        .HasColumnType("int")
                        .HasColumnName("TEMP02_llave");

                    b.Property<string>("X")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("x");

                    b.Property<string>("Y")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("y");

                    b.HasKey("Trp01llave", "Temp02llave");

                    b.ToTable("TRP03_geocordenadas", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Usuario", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("apellido")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.wkf01Flujo", b =>
                {
                    b.Property<int>("wkf01llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WKF01_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("wkf01llave"), 1L, 1);

                    b.Property<int>("wkf01activo")
                        .HasColumnType("int")
                        .HasColumnName("WKF01_activo");

                    b.Property<string>("wkf01descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("WKF01_descripcion");

                    b.Property<string>("wkf01Directorio")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("WKF01_Directorio");

                    b.Property<int?>("wkf01EsInicio")
                        .HasColumnType("int")
                        .HasColumnName("WKF01_EsInicio");

                    b.Property<string>("wkf01EstadoRegistro")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("WKF01_estadoRegistro");

                    b.Property<string>("wkf01IconoUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("WKF01_iconoUrl");

                    b.Property<string>("wkf01ImagenGrande")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("WKF01_ImagenGrande");

                    b.Property<string>("wkf01ImagenPequena")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("WKF01_ImagenPequena");

                    b.Property<int?>("wkf01llavePadre")
                        .HasColumnType("int")
                        .HasColumnName("WKF01_llavePadre");

                    b.Property<string>("wkf01nombre")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("WKF01_nombre");

                    b.Property<int?>("wkf01Orden")
                        .HasColumnType("int")
                        .HasColumnName("WKF01_Orden");

                    b.Property<int?>("wkf01Prioridad")
                        .HasColumnType("int")
                        .HasColumnName("WKF01_Prioridad");

                    b.Property<string>("wkf01Url")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("WKF01_url");

                    b.Property<int?>("wkf01VisibleMenu")
                        .HasColumnType("int")
                        .HasColumnName("WKF01_visibleMenu");

                    b.Property<int?>("wkf03llave")
                        .HasColumnType("int")
                        .HasColumnName("WKF03_llave");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("wkf01llave");

                    b.HasIndex("wkf03llave");

                    b.ToTable("WKF01_Flujo", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.wkf02TipoFlujo", b =>
                {
                    b.Property<int>("wkf02llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WKF02_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("wkf02llave"), 1L, 1);

                    b.Property<int?>("wkf02activo")
                        .HasColumnType("int")
                        .HasColumnName("WKF02_activo");

                    b.Property<string>("wkf02descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("WKF02_descripcion");

                    b.Property<string>("wkf02nombre")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("WKF02_nombre");

                    b.Property<int?>("wkf02Orden")
                        .HasColumnType("int")
                        .HasColumnName("WKF02_orden");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("wkf02llave");

                    b.ToTable("WKF02_TipoFlujo", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.wkf03Nivel", b =>
                {
                    b.Property<int>("wkf03llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WKF03_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("wkf03llave"), 1L, 1);

                    b.Property<int?>("wkf02llave")
                        .HasColumnType("int")
                        .HasColumnName("WKF02_llave");

                    b.Property<int?>("wkf03activo")
                        .HasColumnType("int")
                        .HasColumnName("WKF03_activo");

                    b.Property<string>("wkf03descripcion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("WKF03_descripcion");

                    b.Property<int?>("wkf03Nivel1")
                        .HasColumnType("int")
                        .HasColumnName("WKF03_Nivel");

                    b.Property<string>("wkf03nombre")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("WKF03_nombre");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("wkf03llave");

                    b.HasIndex("wkf02llave");

                    b.ToTable("WKF03_Nivel", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.wkf04Nivelpermiso", b =>
                {
                    b.Property<int>("wkf04llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WKF04_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("wkf04llave"), 1L, 1);

                    b.Property<int?>("wkf03llave")
                        .HasColumnType("int")
                        .HasColumnName("WKF03_llave");

                    b.Property<int?>("wkf04activo")
                        .HasColumnType("int")
                        .HasColumnName("WKF04_activo");

                    b.Property<int?>("wkf05llave")
                        .HasColumnType("int")
                        .HasColumnName("WKF05_llave");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("wkf04llave")
                        .HasName("PK_WKF04_NivelPremiso");

                    b.HasIndex("wkf03llave");

                    b.HasIndex("wkf05llave");

                    b.ToTable("WKF04_Nivelpermiso", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.wkf05Tipopermiso", b =>
                {
                    b.Property<int>("wkf05llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WKF05_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("wkf05llave"), 1L, 1);

                    b.Property<int?>("wkf05activo")
                        .HasColumnType("int")
                        .HasColumnName("WKF05_activo");

                    b.Property<string>("wkf05descripcion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("WKF05_descripcion");

                    b.Property<string>("wkf05nombre")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("WKF05_nombre");

                    b.Property<string>("wkf05Sigla")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("WKF05_sigla");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("wkf05llave")
                        .HasName("PK_WKF05_Tipoperfil");

                    b.ToTable("WKF05_Tipopermiso", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.wkf06perfil", b =>
                {
                    b.Property<int>("wkf06llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WKF06_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("wkf06llave"), 1L, 1);

                    b.Property<int?>("wkf01llave")
                        .HasColumnType("int")
                        .HasColumnName("WKF01_llave");

                    b.Property<int?>("wkf06activo")
                        .HasColumnType("int")
                        .HasColumnName("WKF06_activo");

                    b.Property<string>("wkf06descripcion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("WKF06_descripcion");

                    b.Property<string>("wkf06nombre")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("WKF06_nombre");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("wkf06llave");

                    b.HasIndex("wkf01llave");

                    b.ToTable("WKF06_perfiles", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.wkf07perfilespermiso", b =>
                {
                    b.Property<int>("wkf06llave")
                        .HasColumnType("int")
                        .HasColumnName("WKF06_llave");

                    b.Property<int>("wkf05llave")
                        .HasColumnType("int")
                        .HasColumnName("WKF05_llave");

                    b.Property<int>("wkf07activo")
                        .HasColumnType("int")
                        .HasColumnName("WKF07_activo");

                    b.HasKey("wkf06llave", "wkf05llave");

                    b.HasIndex("wkf05llave");

                    b.ToTable("WKF07_perfilespermiso", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.wkf08Area", b =>
                {
                    b.Property<int>("wfk08llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("wfk08_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("wfk08llave"), 1L, 1);

                    b.Property<bool?>("wfk08activo")
                        .HasColumnType("bit")
                        .HasColumnName("wfk08_activo");

                    b.Property<string>("wfk08descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("wfk08_descripcion");

                    b.Property<string>("wfk08nombre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("wfk08_nombre");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("wfk08llave")
                        .HasName("PK_wfk08_Area");

                    b.ToTable("WKF08_Area", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.wkf09Parametro", b =>
                {
                    b.Property<int>("wkf09llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WKF09_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("wkf09llave"), 1L, 1);

                    b.Property<int?>("wkf01llave")
                        .HasColumnType("int")
                        .HasColumnName("WKF01_llave");

                    b.Property<int?>("wkf09activo")
                        .HasColumnType("int")
                        .HasColumnName("WKF09_activo");

                    b.Property<string>("wkf09Valor")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("WKF09_Valor");

                    b.Property<string>("wkf09Variable")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("WKF09_Variable");

                    b.Property<int?>("wkf10llave")
                        .HasColumnType("int")
                        .HasColumnName("WKF10_llave");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("wkf09llave");

                    b.HasIndex("wkf01llave");

                    b.HasIndex("wkf10llave");

                    b.ToTable("WKF09_Parametro", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.wkf10TipoParametro", b =>
                {
                    b.Property<int>("wkf10llave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WKF10_llave");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("wkf10llave"), 1L, 1);

                    b.Property<int?>("wkf10activo")
                        .HasColumnType("int")
                        .HasColumnName("WKF10_activo");

                    b.Property<string>("wkf10descripcion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("WKF10_descripcion");

                    b.Property<string>("wkf10nombre")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("WKF10_nombre");

                    b.Property<Guid?>("approveby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("APPROVE_BY");

                    b.Property<Guid?>("createby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATE_BY");

                    b.Property<Guid?>("deleteby")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("fechaactivacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactivacion");

                    b.Property<DateTime?>("fechaactualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaactualizacion");

                    b.Property<DateTime?>("fechaeliminacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaeliminacion");

                    b.HasKey("wkf10llave");

                    b.ToTable("WKF10_TipoParametro", (string)null);
                });

            modelBuilder.Entity("mipBackend.Models.Zona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Zonas");
                });

            modelBuilder.Entity("Mnt02especiesAsignada", b =>
                {
                    b.Property<int>("Mnt01llave")
                        .HasColumnType("int");

                    b.Property<int>("esp02llave")
                        .HasColumnType("int");

                    b.HasKey("Mnt01llave", "esp02llave")
                        .HasName("PK_MNT02_especiesAsignadas_2");

                    b.HasIndex("esp02llave");

                    b.ToTable("MNT02_especiesAsignadas", (string)null);
                });

            modelBuilder.Entity("prf02PlantillasUsuario", b =>
                {
                    b.Property<int>("prf01llave")
                        .HasColumnType("int");

                    b.Property<int>("prf03llave")
                        .HasColumnType("int");

                    b.HasKey("prf01llave", "prf03llave");

                    b.HasIndex("prf03llave");

                    b.ToTable("PRF02_PlantillasUsuario", (string)null);
                });

            modelBuilder.Entity("sist07ZonaComuna", b =>
                {
                    b.Property<int>("sist02llave")
                        .HasColumnType("int");

                    b.Property<int>("sist03llave")
                        .HasColumnType("int");

                    b.HasKey("sist02llave", "sist03llave");

                    b.HasIndex("sist03llave");

                    b.ToTable("SIST07_ZonaComuna", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("mipBackend.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("mipBackend.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("mipBackend.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("mipBackend.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("mipBackend.Models.Blk01Bloqueo", b =>
                {
                    b.HasOne("mipBackend.Models.Blk02TipoBloqueo", "Blk02llaveNavigation")
                        .WithMany("Blk01Bloqueos")
                        .HasForeignKey("Blk02llave")
                        .HasConstraintName("FK_BLK01_Bloqueos_BLK02_TipoBloqueo");

                    b.Navigation("Blk02llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.Blk03BloqueoUsuario", b =>
                {
                    b.HasOne("mipBackend.Models.Blk01Bloqueo", "Blk01llaveNavigation")
                        .WithMany("Blk03BloqueoUsuarios")
                        .HasForeignKey("Blk01llave")
                        .HasConstraintName("FK_BLK03_BloqueoUsuario_BLK01_Bloqueos");

                    b.Navigation("Blk01llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.Clbr01Calibracion", b =>
                {
                    b.HasOne("mipBackend.Models.Clbr02TipoCalibracion", "Clbr02llaveNavigation")
                        .WithMany("Clbr01Calibracions")
                        .HasForeignKey("Clbr02llave")
                        .HasConstraintName("FK_CLBR01_Calibracion_CLBR02_TipoCalibracion");

                    b.Navigation("Clbr02llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.cnt01CuentaCliente", b =>
                {
                    b.HasOne("mipBackend.Models.cnt02TipoCuenta", "cnt02llaveNavigation")
                        .WithMany("cnt01CuentaClientes")
                        .HasForeignKey("cnt02llave")
                        .HasConstraintName("FK_CNT01_CuentaCliente_CNT02_TipoCuenta");

                    b.HasOne("mipBackend.Models.cnt03TipoCliente", "cnt03llaveNavigation")
                        .WithMany("cnt01CuentaClientes")
                        .HasForeignKey("cnt03llave")
                        .HasConstraintName("FK_CNT01_CuentaCliente_CNT03_TipoCliente");

                    b.HasOne("mipBackend.Models.per01persona", "per01llaveNavigation")
                        .WithMany("cnt01CuentaClientes")
                        .HasForeignKey("per01llave")
                        .HasConstraintName("FK_CNT01_CuentaCliente_PER01_persona");

                    b.Navigation("cnt02llaveNavigation");

                    b.Navigation("cnt03llaveNavigation");

                    b.Navigation("per01llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.cnt03TipoCliente", b =>
                {
                    b.HasOne("mipBackend.Models.per03Tipopersona", "per03llaveNavigation")
                        .WithMany("cnt03TipoClientes")
                        .HasForeignKey("per03llave")
                        .HasConstraintName("FK_CNT03_TipoCliente_PER03_Tipopersona");

                    b.Navigation("per03llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.cnt04ContactoCliente", b =>
                {
                    b.HasOne("mipBackend.Models.cnt01CuentaCliente", "cnt01llaveNavigation")
                        .WithMany("cnt04ContactoClientes")
                        .HasForeignKey("cnt01llave")
                        .HasConstraintName("FK_CNT04_ContactoCliente_CNT01_CuentaCliente1");

                    b.HasOne("mipBackend.Models.cnt05TipoContacto", "cnt05llaveNavigation")
                        .WithMany("cnt04ContactoClientes")
                        .HasForeignKey("cnt05llave")
                        .HasConstraintName("FK_CNT04_ContactoCliente_CNT05_TipoContacto");

                    b.Navigation("cnt01llaveNavigation");

                    b.Navigation("cnt05llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.cnt06ComunicacionCliente", b =>
                {
                    b.HasOne("mipBackend.Models.cnt01CuentaCliente", "cnt01llaveNavigation")
                        .WithMany("cnt06ComunicacionClientes")
                        .HasForeignKey("cnt01llave")
                        .HasConstraintName("FK_CNT06_ComunicacionCliente_CNT01_CuentaCliente");

                    b.HasOne("mipBackend.Models.cnt08Segmentacion", "cnt08llaveNavigation")
                        .WithMany("cnt06ComunicacionClientes")
                        .HasForeignKey("cnt08llave")
                        .HasConstraintName("FK_CNT06_ComunicacionCliente_CNT08_Segmentacion");

                    b.HasOne("mipBackend.Models.cnt10TipoComunicacion", "cnt10llaveNavigation")
                        .WithMany("cnt06ComunicacionClientes")
                        .HasForeignKey("cnt10llave")
                        .HasConstraintName("FK_CNT06_ComunicacionCliente_CNT10_TipoComunicacion");

                    b.HasOne("mipBackend.Models.sist03Comuna", "sist03llaveNavigation")
                        .WithMany("cnt06ComunicacionClientes")
                        .HasForeignKey("sist03llave")
                        .HasConstraintName("FK_CNT06_ComunicacionCliente_SIST03_Comuna");

                    b.Navigation("cnt01llaveNavigation");

                    b.Navigation("cnt08llaveNavigation");

                    b.Navigation("cnt10llaveNavigation");

                    b.Navigation("sist03llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.cnt07TipoSegmentacion", b =>
                {
                    b.HasOne("mipBackend.Models.cnt18NivelSegmentacion", "cnt18llaveNavigation")
                        .WithMany("cnt07TipoSegmentacions")
                        .HasForeignKey("cnt18llave")
                        .HasConstraintName("FK_CNT07_TipoSegmentacion_CNT18_NivelSegmentacion");

                    b.Navigation("cnt18llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.cnt08Segmentacion", b =>
                {
                    b.HasOne("mipBackend.Models.cnt01CuentaCliente", "cnt01llaveNavigation")
                        .WithMany("cnt08Segmentacions")
                        .HasForeignKey("cnt01llave")
                        .HasConstraintName("FK_CNT08_Segmentacion_CNT01_CuentaCliente");

                    b.HasOne("mipBackend.Models.cnt07TipoSegmentacion", "cnt07llaveNavigation")
                        .WithMany("cnt08Segmentacions")
                        .HasForeignKey("cnt07llave")
                        .HasConstraintName("FK_CNT08_Segmentacion_CNT07_TipoSegmentacion");

                    b.HasOne("mipBackend.Models.cnt08Segmentacion", "cnt08llavePadreNavigation")
                        .WithMany("Inversecnt08llavePadreNavigation")
                        .HasForeignKey("cnt08llavePadre")
                        .HasConstraintName("FK_CNT08_Segmentacion_CNT08_Segmentacion");

                    b.Navigation("cnt01llaveNavigation");

                    b.Navigation("cnt07llaveNavigation");

                    b.Navigation("cnt08llavePadreNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.cnt09ComunicacionSegmentacion", b =>
                {
                    b.HasOne("mipBackend.Models.cnt08Segmentacion", "cnt08llaveNavigation")
                        .WithMany("cnt09ComunicacionSegmentacions")
                        .HasForeignKey("cnt08llave")
                        .HasConstraintName("FK_CNT09_ComunicacionSegmentacion_CNT08_Segmentacion");

                    b.Navigation("cnt08llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.cnt11ContactoSegmentacion", b =>
                {
                    b.HasOne("mipBackend.Models.cnt08Segmentacion", "cnt08llaveNavigation")
                        .WithMany("cnt11ContactoSegmentacions")
                        .HasForeignKey("cnt08llave")
                        .HasConstraintName("FK_CNT11_ContactoSegmentacion_CNT08_Segmentacion");

                    b.Navigation("cnt08llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.cnt12Empleado", b =>
                {
                    b.HasOne("mipBackend.Models.cnt01CuentaCliente", "cnt01llaveNavigation")
                        .WithMany("cnt12Empleados")
                        .HasForeignKey("cnt01llave")
                        .HasConstraintName("FK_CNT12_Empleados_CNT01_CuentaCliente");

                    b.HasOne("mipBackend.Models.cnt13TipoEmpleado", "cnt13llaveNavigation")
                        .WithMany("cnt12Empleados")
                        .HasForeignKey("cnt13llave")
                        .HasConstraintName("FK_CNT12_Empleados_CNT13_TipoEmpleado");

                    b.HasOne("mipBackend.Models.per01persona", "per01llaveNavigation")
                        .WithMany("cnt12Empleados")
                        .HasForeignKey("per01llave")
                        .HasConstraintName("FK_CNT12_Empleados_PER01_persona");

                    b.Navigation("cnt01llaveNavigation");

                    b.Navigation("cnt13llaveNavigation");

                    b.Navigation("per01llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.cnt14ClienteLicencia", b =>
                {
                    b.HasOne("mipBackend.Models.cnt01CuentaCliente", "cnt01llaveNavigation")
                        .WithMany("cnt14ClienteLicencia")
                        .HasForeignKey("cnt01llave")
                        .HasConstraintName("FK_CNT14_ClienteLicencia_CNT01_CuentaCliente");

                    b.Navigation("cnt01llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.cnt15EmpleadoLicencia", b =>
                {
                    b.HasOne("mipBackend.Models.cnt12Empleado", "cnt12llaveNavigation")
                        .WithMany("cnt15EmpleadoLicencia")
                        .HasForeignKey("cnt12llave")
                        .IsRequired()
                        .HasConstraintName("FK_CNT15_EmpleadoLicencia_CNT12_Empleados");

                    b.HasOne("mipBackend.Models.cnt19LicenciaCliente", "cnt19llaveNavigation")
                        .WithMany("cnt15EmpleadoLicencia")
                        .HasForeignKey("cnt19llave")
                        .IsRequired()
                        .HasConstraintName("FK_CNT15_EmpleadoLicencia_CNT19_LicenciaCliente");

                    b.Navigation("cnt12llaveNavigation");

                    b.Navigation("cnt19llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.cnt17Bloqueo", b =>
                {
                    b.HasOne("mipBackend.Models.Blk01Bloqueo", "Blk01llaveNavigation")
                        .WithMany("cnt17Bloqueos")
                        .HasForeignKey("Blk01llave")
                        .HasConstraintName("FK_CNT17_Bloqueos_BLK01_Bloqueos");

                    b.HasOne("mipBackend.Models.cnt01CuentaCliente", "cnt01llaveNavigation")
                        .WithMany("cnt17Bloqueos")
                        .HasForeignKey("cnt01llave")
                        .HasConstraintName("FK_CNT17_Bloqueos_CNT01_CuentaCliente");

                    b.HasOne("mipBackend.Models.cnt08Segmentacion", "cnt08llaveNavigation")
                        .WithMany("cnt17Bloqueos")
                        .HasForeignKey("cnt08llave")
                        .HasConstraintName("FK_CNT17_Bloqueos_CNT08_Segmentacion");

                    b.HasOne("mipBackend.Models.cnt14ClienteLicencia", "cnt14llaveNavigation")
                        .WithMany("cnt17Bloqueos")
                        .HasForeignKey("cnt14llave")
                        .HasConstraintName("FK_CNT17_Bloqueos_CNT14_ClienteLicencia");

                    b.HasOne("mipBackend.Models.cnt16TipoBloqueoCliente", "cnt16llaveNavigation")
                        .WithMany("cnt17Bloqueos")
                        .HasForeignKey("cnt16llave")
                        .HasConstraintName("FK_CNT17_Bloqueos_CNT16_TipoBloqueoCliente");

                    b.Navigation("Blk01llaveNavigation");

                    b.Navigation("cnt01llaveNavigation");

                    b.Navigation("cnt08llaveNavigation");

                    b.Navigation("cnt14llaveNavigation");

                    b.Navigation("cnt16llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.cnt19LicenciaCliente", b =>
                {
                    b.HasOne("mipBackend.Models.cnt01CuentaCliente", "cnt01llaveNavigation")
                        .WithMany("cnt19LicenciaClientes")
                        .HasForeignKey("cnt01llave")
                        .HasConstraintName("FK_CNT19_LicenciaCliente_CNT01_CuentaCliente");

                    b.Navigation("cnt01llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.cnt20LicenciaServicio", b =>
                {
                    b.HasOne("mipBackend.Models.cnt19LicenciaCliente", "cnt19llaveNavigation")
                        .WithMany("cnt20LicenciaServicios")
                        .HasForeignKey("cnt19llave")
                        .IsRequired()
                        .HasConstraintName("FK_CNT20_LicenciaServicio_CNT19_LicenciaCliente");

                    b.Navigation("cnt19llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.cnt22EstacionTipoEstacion", b =>
                {
                    b.HasOne("mipBackend.Models.cnt08Segmentacion", "cnt08llaveNavigation")
                        .WithMany("cnt22EstacionTipoEstacions")
                        .HasForeignKey("cnt08llave")
                        .IsRequired()
                        .HasConstraintName("FK_CNT22_Estacion_TipoEstacion_CNT08_Segmentacion");

                    b.HasOne("mipBackend.Models.cnt21TipoEstacion", "cnt21llaveNavigation")
                        .WithMany("cnt22EstacionTipoEstacions")
                        .HasForeignKey("cnt21llave")
                        .IsRequired()
                        .HasConstraintName("FK_CNT22_Estacion_TipoEstacion_CNT21_TipoEstacion");

                    b.Navigation("cnt08llaveNavigation");

                    b.Navigation("cnt21llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.Comuna", b =>
                {
                    b.HasOne("mipBackend.Models.Region", "Region")
                        .WithMany("Comunas")
                        .HasForeignKey("RegionId");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("mipBackend.Models.Cont01Contacto", b =>
                {
                    b.HasOne("mipBackend.Models.Cont02TipoContacto", "Cont02llaveNavigation")
                        .WithMany("Cont01Contactos")
                        .HasForeignKey("Cont02llave")
                        .HasConstraintName("FK_CONT01_Contacto_CONT02_TipoContacto");

                    b.Navigation("Cont02llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.Conteo01Conteo", b =>
                {
                    b.HasOne("mipBackend.Models.Temp02TemporadaBase", "Temp02llaveNavigation")
                        .WithMany("Conteo01Conteos")
                        .HasForeignKey("Temp02llave")
                        .HasConstraintName("FK_CONTEO01_Conteos_TEMP02_TemporadaBase");

                    b.Navigation("Temp02llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.Conteo02Procesado", b =>
                {
                    b.HasOne("mipBackend.Models.cnt08Segmentacion", "cnt08llaveNavigation")
                        .WithMany("Conteo02Procesados")
                        .HasForeignKey("cnt08llave")
                        .HasConstraintName("FK_CONTEO02_Procesados_CNT08_Segmentacion");

                    b.Navigation("cnt08llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.Conteo03Resumen", b =>
                {
                    b.HasOne("mipBackend.Models.cnt08Segmentacion", "cnt08llaveNavigation")
                        .WithMany("Conteo03Resumen")
                        .HasForeignKey("cnt08llave")
                        .HasConstraintName("FK_CONTEO03_Resumen_CNT08_Segmentacion");

                    b.Navigation("cnt08llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.Conteo04ResumenSag", b =>
                {
                    b.HasOne("mipBackend.Models.esp01especie", "esp01llaveNavigation")
                        .WithMany("Conteo04ResumenSags")
                        .HasForeignKey("esp01llave")
                        .HasConstraintName("FK_CONTEO04_ResumenSag_ESP01_especies");

                    b.HasOne("mipBackend.Models.sist03Comuna", "sist03llaveNavigation")
                        .WithMany("Conteo04ResumenSags")
                        .HasForeignKey("sist03llave")
                        .HasConstraintName("FK_CONTEO04_ResumenSag_SIST03_Comuna");

                    b.HasOne("mipBackend.Models.Temp02TemporadaBase", "Temp02llaveNavigation")
                        .WithMany("Conteo04ResumenSags")
                        .HasForeignKey("Temp02llave")
                        .HasConstraintName("FK_CONTEO04_ResumenSag_TEMP02_TemporadaBase");

                    b.Navigation("esp01llaveNavigation");

                    b.Navigation("sist03llaveNavigation");

                    b.Navigation("Temp02llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.Conteo05ControlReserva", b =>
                {
                    b.HasOne("mipBackend.Models.Secu02Usuario", "useridNavigation")
                        .WithMany("Conteo05ControlReservas")
                        .HasForeignKey("userid")
                        .HasConstraintName("FK_CONTEO05_Control_Reserva_SECU02_Usuario");

                    b.Navigation("useridNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.Ctt01Contrato", b =>
                {
                    b.HasOne("mipBackend.Models.Ctt02TipoContrato", "Ctt02llaveNavigation")
                        .WithMany("Ctt01Contratos")
                        .HasForeignKey("Ctt02llave")
                        .HasConstraintName("FK_CTT01_Contrato_CTT02_TipoContrato");

                    b.Navigation("Ctt02llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.Eml01BitacoraEmailUsuario", b =>
                {
                    b.HasOne("mipBackend.Models.Eml02MailBase", "Eml02llaveNavigation")
                        .WithMany("Eml01BitacoraEmailUsuarios")
                        .HasForeignKey("Eml02llave")
                        .HasConstraintName("FK_EML01_EmailUsuario_EML02_MailBase");

                    b.HasOne("mipBackend.Models.Eml04ImportanciaMail", "Eml04llaveNavigation")
                        .WithMany("Eml01BitacoraEmailUsuarios")
                        .HasForeignKey("Eml04llave")
                        .HasConstraintName("FK_EML01_EmailUsuario_EML04_ImportanciaMail");

                    b.HasOne("mipBackend.Models.Secu02Usuario", "useridNavigation")
                        .WithMany("Eml01BitacoraEmailUsuarios")
                        .HasForeignKey("userid")
                        .HasConstraintName("FK_EML01_BitacoraEmailUsuario_SECU02_Usuario");

                    b.Navigation("Eml02llaveNavigation");

                    b.Navigation("Eml04llaveNavigation");

                    b.Navigation("useridNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.Eml02MailBase", b =>
                {
                    b.HasOne("mipBackend.Models.Eml03TipoMailAccion", "Eml03llaveNavigation")
                        .WithMany("Eml02MailBases")
                        .HasForeignKey("Eml03llave")
                        .HasConstraintName("FK_EML02_MailBase_EML03_TipoMailAcciones");

                    b.HasOne("mipBackend.Models.Eml04ImportanciaMail", "Eml04llaveNavigation")
                        .WithMany("Eml02MailBases")
                        .HasForeignKey("Eml04llave")
                        .HasConstraintName("FK_EML02_MailBase_EML04_ImportanciaMail");

                    b.Navigation("Eml03llaveNavigation");

                    b.Navigation("Eml04llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.Eml05ArchivoMail", b =>
                {
                    b.HasOne("mipBackend.Models.Eml01BitacoraEmailUsuario", "Eml01llaveNavigation")
                        .WithMany("Eml05ArchivoMails")
                        .HasForeignKey("Eml01llave")
                        .HasConstraintName("FK_EML05_ArchivoMail_EML01_EmailUsuario");

                    b.HasOne("mipBackend.Models.Eml06TipoArchivo", "Eml05llaveNavigation")
                        .WithOne("Eml05ArchivoMail")
                        .HasForeignKey("mipBackend.Models.Eml05ArchivoMail", "Eml05llave")
                        .IsRequired()
                        .HasConstraintName("FK_EML05_ArchivoMail_EML06_TipoArchivo");

                    b.Navigation("Eml01llaveNavigation");

                    b.Navigation("Eml05llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.esp01especie", b =>
                {
                    b.HasOne("mipBackend.Models.esp03especieBase", "esp03llaveNavigation")
                        .WithMany("esp01especies")
                        .HasForeignKey("esp03llave")
                        .HasConstraintName("FK_ESP01_especies_ESP03_especieBase");

                    b.HasOne("mipBackend.Models.esp04EstadoDanio", "esp04llaveNavigation")
                        .WithMany("esp01especies")
                        .HasForeignKey("esp04llave")
                        .HasConstraintName("FK_ESP01_especies_ESP04_EstadoDanio");

                    b.Navigation("esp03llaveNavigation");

                    b.Navigation("esp04llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.esp02Temporadaespecie", b =>
                {
                    b.HasOne("mipBackend.Models.esp01especie", "esp01llaveNavigation")
                        .WithMany("esp02Temporadaespecies")
                        .HasForeignKey("esp01llave")
                        .HasConstraintName("FK_ESP02_Temporadaespecie_ESP01_especies");

                    b.HasOne("mipBackend.Models.Temp01Temporada", "Temp01llaveNavigation")
                        .WithMany("esp02Temporadaespecies")
                        .HasForeignKey("Temp01llave")
                        .HasConstraintName("FK_ESP02_Temporadaespecie_TEMP01_Temporada");

                    b.Navigation("esp01llaveNavigation");

                    b.Navigation("Temp01llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.esp03especieBase", b =>
                {
                    b.HasOne("mipBackend.Models.esp08TipoBase", "esp08llaveNavigation")
                        .WithMany("esp03especieBases")
                        .HasForeignKey("esp08llave")
                        .HasConstraintName("FK_ESP03_especieBase_ESP08_TipoBase");

                    b.Navigation("esp08llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.esp04EstadoDanio", b =>
                {
                    b.HasOne("mipBackend.Models.esp06MedidaUmbral", "esp06llaveNavigation")
                        .WithMany("esp04EstadoDanios")
                        .HasForeignKey("esp06llave")
                        .HasConstraintName("FK_ESP04_EstadoDanio_ESP06_MedidaUmbral");

                    b.Navigation("esp06llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.esp05Umbral", b =>
                {
                    b.HasOne("mipBackend.Models.esp01especie", "esp01llaveNavigation")
                        .WithMany("esp05Umbrals")
                        .HasForeignKey("esp01llave")
                        .HasConstraintName("FK_ESP05_Umbral_ESP01_especies");

                    b.HasOne("mipBackend.Models.esp09TipoBaseUmbral", "esp09llaveNavigation")
                        .WithMany("esp05Umbrals")
                        .HasForeignKey("esp09llave")
                        .HasConstraintName("FK_ESP05_Umbral_ESP09_TipoBaseUmbral");

                    b.Navigation("esp01llaveNavigation");

                    b.Navigation("esp09llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.esp07Union", b =>
                {
                    b.HasOne("mipBackend.Models.esp03especieBase", "esp03llaveNavigation")
                        .WithMany("esp07Unions")
                        .HasForeignKey("esp03llave")
                        .IsRequired()
                        .HasConstraintName("FK_ESP07_Union_ESP03_especieBase");

                    b.Navigation("esp03llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.esp11ReglaGrafico", b =>
                {
                    b.HasOne("mipBackend.Models.esp10TipoRegla", "esp10llaveNavigation")
                        .WithMany("esp11ReglaGraficos")
                        .HasForeignKey("esp10llave")
                        .HasConstraintName("FK_ESP11_ReglaGrafico_ESP10_TipoRegla");

                    b.Navigation("esp10llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.Frm02Formulario", b =>
                {
                    b.HasOne("mipBackend.Models.Eml01BitacoraEmailUsuario", "Eml01llaveNavigation")
                        .WithMany("Frm02Formularios")
                        .HasForeignKey("Eml01llave")
                        .HasConstraintName("FK_FRM02_Formulario_EML01_BitacoraEmailUsuario");

                    b.HasOne("mipBackend.Models.Frm01TipoFormulario", "Frm01llaveNavigation")
                        .WithMany("Frm02Formularios")
                        .HasForeignKey("Frm01llave")
                        .HasConstraintName("FK_FRM02_Formulario_FRM01_TipoFormulario");

                    b.Navigation("Eml01llaveNavigation");

                    b.Navigation("Frm01llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.Ins02RecuperarClave", b =>
                {
                    b.HasOne("mipBackend.Models.sist05EstadoRegistro", "Ins02EstadoNavigation")
                        .WithMany("Ins02RecuperarClaves")
                        .HasForeignKey("Ins02Estado")
                        .HasConstraintName("FK_INS02_RecuperarClave_SIST05_EstadoRegistro");

                    b.Navigation("Ins02EstadoNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.Lnc02ServiciosLicencia", b =>
                {
                    b.HasOne("mipBackend.Models.Lnc01Licencia", "Lnc01llaveNavigation")
                        .WithMany("Lnc02ServiciosLicencia")
                        .HasForeignKey("Lnc01llave")
                        .IsRequired()
                        .HasConstraintName("FK_LNC02_ServiciosLicencia_LNC01_Licencias");

                    b.HasOne("mipBackend.Models.Serv01Servicio", "Serv01llaveNavigation")
                        .WithMany("Lnc02ServiciosLicencia")
                        .HasForeignKey("Serv01llave")
                        .IsRequired()
                        .HasConstraintName("FK_LNC02_ServiciosLicencia_SERV01_Servicio");

                    b.Navigation("Lnc01llaveNavigation");

                    b.Navigation("Serv01llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.Lnc03LicenciaContrato", b =>
                {
                    b.HasOne("mipBackend.Models.Ctt01Contrato", "Ctt01llaveNavigation")
                        .WithMany("Lnc03LicenciaContratos")
                        .HasForeignKey("Ctt01llave")
                        .IsRequired()
                        .HasConstraintName("FK_LNC03_LicenciaContrato_CTT01_Contrato");

                    b.HasOne("mipBackend.Models.Lnc01Licencia", "Lnc01llaveNavigation")
                        .WithMany("Lnc03LicenciaContratos")
                        .HasForeignKey("Lnc01llave")
                        .IsRequired()
                        .HasConstraintName("FK_LNC03_LicenciaContrato_LNC01_Licencias");

                    b.Navigation("Ctt01llaveNavigation");

                    b.Navigation("Lnc01llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.Lnc05ValorLicencia", b =>
                {
                    b.HasOne("mipBackend.Models.Lnc01Licencia", "Lnc01llaveNavigation")
                        .WithMany("Lnc05ValorLicencia")
                        .HasForeignKey("Lnc01llave")
                        .HasConstraintName("FK_LNC05_valorLicencia_LNC01_Licencias");

                    b.Navigation("Lnc01llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.Lnc06Cobertura", b =>
                {
                    b.HasOne("mipBackend.Models.Lnc01Licencia", "Lnc01llaveNavigation")
                        .WithMany("Lnc06Coberturas")
                        .HasForeignKey("Lnc01llave")
                        .IsRequired()
                        .HasConstraintName("FK_LNC06_Cobertura_LNC01_Licencias");

                    b.Navigation("Lnc01llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.Lnc07Control", b =>
                {
                    b.HasOne("mipBackend.Models.Lnc01Licencia", "Lnc01llaveNavigation")
                        .WithMany("Lnc07Controls")
                        .HasForeignKey("Lnc01llave")
                        .IsRequired()
                        .HasConstraintName("FK_LNC07_Control_LNC01_Licencias");

                    b.Navigation("Lnc01llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.Log01Bitacora", b =>
                {
                    b.HasOne("mipBackend.Models.Log03MensajeBitacora", "Log03llaveNavigation")
                        .WithMany("Log01Bitacoras")
                        .HasForeignKey("Log03llave")
                        .HasConstraintName("FK_LOG01_Bitacora_LOG03_MensajeBitacora");

                    b.Navigation("Log03llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.Log03MensajeBitacora", b =>
                {
                    b.HasOne("mipBackend.Models.Log02TipoBitacora", "Log02llaveNavigation")
                        .WithMany("Log03MensajeBitacoras")
                        .HasForeignKey("Log02llave")
                        .HasConstraintName("FK_LOG03_MensajeBitacora_LOG02_TipoBitacora");

                    b.Navigation("Log02llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.Mnt01Monitor", b =>
                {
                    b.HasOne("mipBackend.Models.Mnt04TipoMonitor", "Mnt04llaveNavigation")
                        .WithMany("Mnt01Monitores")
                        .HasForeignKey("Mnt04llave")
                        .HasConstraintName("FK_MNT01_Monitores_MNT04_TipoMonitor");

                    b.Navigation("Mnt04llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.Mnt03periodosTrampa", b =>
                {
                    b.HasOne("mipBackend.Models.Mnt01Monitor", "Mnt01llaveNavigation")
                        .WithMany("Mnt03periodosTrampas")
                        .HasForeignKey("Mnt01llave")
                        .IsRequired()
                        .HasConstraintName("FK_MNT03_periodosTrampas_MNT01_Monitores");

                    b.HasOne("mipBackend.Models.Temp02TemporadaBase", "Temp02llaveNavigation")
                        .WithMany("Mnt03periodosTrampas")
                        .HasForeignKey("Temp02llave")
                        .IsRequired()
                        .HasConstraintName("FK_MNT03_periodosTrampas_TEMP02_TemporadaBase");

                    b.Navigation("Mnt01llaveNavigation");

                    b.Navigation("Temp02llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.Obsc01ObservacionCampo", b =>
                {
                    b.HasOne("mipBackend.Models.esp08TipoBase", "esp08llaveNavigation")
                        .WithMany("Obsc01ObservacionCampos")
                        .HasForeignKey("esp08llave")
                        .HasConstraintName("FK_OBSC01_ObservacionCampo_ESP08_TipoBase");

                    b.HasOne("mipBackend.Models.Temp02TemporadaBase", "Temp02llaveNavigation")
                        .WithMany("Obsc01ObservacionCampos")
                        .HasForeignKey("Temp02llave")
                        .HasConstraintName("FK_OBSC01_ObservacionCampo_TEMP02_TemporadaBase");

                    b.Navigation("esp08llaveNavigation");

                    b.Navigation("Temp02llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.Pbcd01Publicidad", b =>
                {
                    b.HasOne("mipBackend.Models.Pbcd02TipoPublicidad", "Pbcd02llaveNavigation")
                        .WithMany("Pbcd01Publicidads")
                        .HasForeignKey("Pbcd02llave")
                        .HasConstraintName("FK_PBCD01_Publicidad_PBCD02_TipoPublicidad");

                    b.Navigation("Pbcd02llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.Pbcd03Programacion", b =>
                {
                    b.HasOne("mipBackend.Models.Pbcd01Publicidad", "Pbcd01llaveNavigation")
                        .WithMany("Pbcd03Programacions")
                        .HasForeignKey("Pbcd01llave")
                        .HasConstraintName("FK_PBCD03_Programacion_PBCD01_Publicidad");

                    b.Navigation("Pbcd01llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.per01persona", b =>
                {
                    b.HasOne("mipBackend.Models.per02Genero", "per02llaveNavigation")
                        .WithMany("per01personas")
                        .HasForeignKey("per02llave")
                        .HasConstraintName("FK_PER01_persona_PER02_Genero");

                    b.HasOne("mipBackend.Models.per03Tipopersona", "per03llaveNavigation")
                        .WithMany("per01personas")
                        .HasForeignKey("per03llave")
                        .HasConstraintName("FK_PER01_persona_PER03_Tipopersona");

                    b.Navigation("per02llaveNavigation");

                    b.Navigation("per03llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.per05Comunicacion", b =>
                {
                    b.HasOne("mipBackend.Models.per01persona", "per01llaveNavigation")
                        .WithMany("per05Comunicacions")
                        .HasForeignKey("per01llave")
                        .IsRequired()
                        .HasConstraintName("FK_PER05_Comunicacion_PER01_persona");

                    b.HasOne("mipBackend.Models.per03Tipopersona", "per03llaveNavigation")
                        .WithMany("per05Comunicacions")
                        .HasForeignKey("per03llave")
                        .IsRequired()
                        .HasConstraintName("FK_PER05_Comunicacion_PER03_Tipopersona");

                    b.HasOne("mipBackend.Models.per04TipoComunicacion", "per04llaveNavigation")
                        .WithMany("per05Comunicacions")
                        .HasForeignKey("per04llave")
                        .IsRequired()
                        .HasConstraintName("FK_PER05_Comunicacion_PER04_TipoComunicacion");

                    b.HasOne("mipBackend.Models.per06TipopersonaComunicacion", "per0")
                        .WithMany("per05Comunicacions")
                        .HasForeignKey("per03llave", "per04llave")
                        .IsRequired()
                        .HasConstraintName("FK_PER05_Comunicacion_PER06_TipopersonaComunicacion");

                    b.Navigation("per0");

                    b.Navigation("per01llaveNavigation");

                    b.Navigation("per03llaveNavigation");

                    b.Navigation("per04llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.per06TipopersonaComunicacion", b =>
                {
                    b.HasOne("mipBackend.Models.per03Tipopersona", "per03llaveNavigation")
                        .WithMany("per06TipopersonaComunicacions")
                        .HasForeignKey("per03llave")
                        .IsRequired()
                        .HasConstraintName("FK_PER06_TipopersonaComunicacion_PER03_Tipopersona");

                    b.HasOne("mipBackend.Models.per04TipoComunicacion", "per04llaveNavigation")
                        .WithMany("per06TipopersonaComunicacions")
                        .HasForeignKey("per04llave")
                        .IsRequired()
                        .HasConstraintName("FK_PER06_TipopersonaComunicacion_PER04_TipoComunicacion");

                    b.Navigation("per03llaveNavigation");

                    b.Navigation("per04llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.per07personaUsuario", b =>
                {
                    b.HasOne("mipBackend.Models.per01persona", "per01llaveNavigation")
                        .WithMany("per07personaUsuarios")
                        .HasForeignKey("per01llave")
                        .HasConstraintName("FK_PER07_personaUsuario_PER01_persona");

                    b.Navigation("per01llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.Pgo01CompraLicencia", b =>
                {
                    b.HasOne("mipBackend.Models.cnt01CuentaCliente", "cnt19llaveNavigation")
                        .WithMany("Pgo01CompraLicencia")
                        .HasForeignKey("cnt19llave")
                        .HasConstraintName("FK_PGO01_CompraLicencia_CNT01_CuentaCliente");

                    b.HasOne("mipBackend.Models.cnt19LicenciaCliente", "cnt19llave1")
                        .WithMany("Pgo01CompraLicencia")
                        .HasForeignKey("cnt19llave")
                        .HasConstraintName("FK_PGO01_CompraLicencia_CNT19_LicenciaCliente");

                    b.HasOne("mipBackend.Models.Pgo03TipoPagoLicencia", "Pgo03llaveNavigation")
                        .WithMany("Pgo01CompraLicencia")
                        .HasForeignKey("Pgo03llave")
                        .HasConstraintName("FK_PGO01_CompraLicencia_PGO03_FormaPago1");

                    b.Navigation("cnt19llave1");

                    b.Navigation("cnt19llaveNavigation");

                    b.Navigation("Pgo03llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.Pgo02NotificarPagoLicencia", b =>
                {
                    b.HasOne("mipBackend.Models.Pgo01CompraLicencia", "Pgo01llaveNavigation")
                        .WithMany("Pgo02NotificarPagoLicencia")
                        .HasForeignKey("Pgo01llave")
                        .HasConstraintName("FK_PGO02_NotificarPagoLicencia_PGO01_CompraLicencia");

                    b.Navigation("Pgo01llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.prf01perfil", b =>
                {
                    b.HasOne("mipBackend.Models.prf05TipoAsignacionUsuario", "prf05llaveNavigation")
                        .WithMany("prf01perfiles")
                        .HasForeignKey("prf05llave")
                        .HasConstraintName("FK_PRF01_perfiles_PRF05_TipoAsignacionUsuario");

                    b.HasOne("mipBackend.Models.Secu02Usuario", "useridNavigation")
                        .WithMany("prf01perfiles")
                        .HasForeignKey("userid")
                        .HasConstraintName("FK_PRF01_perfiles_SECU02_Usuario");

                    b.Navigation("prf05llaveNavigation");

                    b.Navigation("useridNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.prf04PlantillaFlujo", b =>
                {
                    b.HasOne("mipBackend.Models.prf03Plantilla", "prf03llaveNavigation")
                        .WithMany("prf04PlantillaFlujos")
                        .HasForeignKey("prf03llave")
                        .IsRequired()
                        .HasConstraintName("FK_PRF04_PlantillaFlujo_PRF03_Plantillas");

                    b.HasOne("mipBackend.Models.wkf01Workflow", "wkf01llaveNavigation")
                        .WithMany("prf04PlantillaFlujos")
                        .HasForeignKey("wkf01llave")
                        .IsRequired()
                        .HasConstraintName("FK_PRF04_PlantillaFlujo_WKF01_Flujos");

                    b.Navigation("prf03llaveNavigation");

                    b.Navigation("wkf01llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.prf06permisosUsuario", b =>
                {
                    b.HasOne("mipBackend.Models.prf01perfil", "prf01llaveNavigation")
                        .WithMany("prf06permisosUsuarios")
                        .HasForeignKey("prf01llave")
                        .IsRequired()
                        .HasConstraintName("FK_PRF06_permisosUsuario_PRF01_perfiles");

                    b.HasOne("mipBackend.Models.wkf06perfil", "wkf06llaveNavigation")
                        .WithMany("prf06permisosUsuarios")
                        .HasForeignKey("wkf06llave")
                        .IsRequired()
                        .HasConstraintName("FK_PRF06_permisosUsuario_WKF06_perfiles");

                    b.Navigation("prf01llaveNavigation");

                    b.Navigation("wkf06llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.Secu02Usuario", b =>
                {
                    b.HasOne("mipBackend.Models.Secu04TipoEncriptacion", "Secu04TipoEncriptacionNavigation")
                        .WithMany("Secu02Usuarios")
                        .HasForeignKey("Secu04TipoEncriptacion")
                        .HasConstraintName("FK_SECU02_Usuario_SECU04_TipoEncriptacion1");

                    b.Navigation("Secu04TipoEncriptacionNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.Secu05UsuarioAcceso", b =>
                {
                    b.HasOne("mipBackend.Models.Secu02Usuario", "useridNavigation")
                        .WithMany("Secu05UsuarioAccesos")
                        .HasForeignKey("userid")
                        .HasConstraintName("FK_SECU05_UsuarioAcceso_SECU02_Usuario");

                    b.HasOne("mipBackend.Models.Secu03TipoAcceso", "Secu03TipoAccesoNavigation")
                        .WithMany("Secu05UsuarioAccesos")
                        .HasForeignKey("Secu03TipoAcceso")
                        .HasConstraintName("FK_SECU05_UsuarioAcceso_SECU03_TipoAcceso");

                    b.Navigation("useridNavigation");

                    b.Navigation("Secu03TipoAccesoNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.Secu06UsuarioRol", b =>
                {
                    b.HasOne("mipBackend.Models.Secu01Rol", "Secu01llaveNavigation")
                        .WithMany("Secu06UsuarioRols")
                        .HasForeignKey("Secu01llave")
                        .IsRequired()
                        .HasConstraintName("FK_SECU06_UsuarioRol_SECU01_Rol");

                    b.HasOne("mipBackend.Models.Secu02Usuario", "useridNavigation")
                        .WithMany("Secu06UsuarioRols")
                        .HasForeignKey("userid")
                        .IsRequired()
                        .HasConstraintName("FK_SECU06_UsuarioRol_SECU02_Usuario");

                    b.Navigation("Secu01llaveNavigation");

                    b.Navigation("useridNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.Secu08UsuarioAplicacion", b =>
                {
                    b.HasOne("mipBackend.Models.Secu02Usuario", "useridNavigation")
                        .WithMany("Secu08UsuarioAplicacions")
                        .HasForeignKey("userid")
                        .IsRequired()
                        .HasConstraintName("FK_UsuarioAplicacion_Usuario");

                    b.HasOne("mipBackend.Models.Secu07Aplicacion", "Secu07llaveNavigation")
                        .WithMany("Secu08UsuarioAplicacions")
                        .HasForeignKey("Secu07llave")
                        .IsRequired()
                        .HasConstraintName("FK_UsuarioAplicacion_Aplicacion");

                    b.Navigation("useridNavigation");

                    b.Navigation("Secu07llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.Secu10Accesopermitido", b =>
                {
                    b.HasOne("mipBackend.Models.Secu02Usuario", "useridNavigation")
                        .WithMany("Secu10Accesopermitidos")
                        .HasForeignKey("userid")
                        .HasConstraintName("FK_SECU10_Accesopermitido_SECU02_Usuario");

                    b.HasOne("mipBackend.Models.Secu03TipoAcceso", "Secu03llaveNavigation")
                        .WithMany("Secu10Accesopermitidos")
                        .HasForeignKey("Secu03llave")
                        .HasConstraintName("FK_SECU10_Accesopermitido_SECU03_TipoAcceso");

                    b.Navigation("useridNavigation");

                    b.Navigation("Secu03llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.Sercl02MuestreoFruta", b =>
                {
                    b.HasOne("mipBackend.Models.Sercl01ServiciosCliente", "Sercl01llaveNavigation")
                        .WithMany("Sercl02MuestreoFruta")
                        .HasForeignKey("Sercl01llave")
                        .HasConstraintName("FK_SERCL02_MuestreoFruta_SERCL01_ServiciosClientes");

                    b.Navigation("Sercl01llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.Sercltemp01ServiciosClientesTemporal", b =>
                {
                    b.HasOne("mipBackend.Models.Conteo03Resumen", "Conteo03llaveNavigation")
                        .WithMany("Sercltemp01ServiciosClientesTemporals")
                        .HasForeignKey("Conteo03llave")
                        .HasConstraintName("FK_SERCLTEMP01_ServiciosClientes_Temporal_CONTEO03_Resumen");

                    b.Navigation("Conteo03llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.Serv01Servicio", b =>
                {
                    b.HasOne("mipBackend.Models.Serv02TipoServicio", "Serv02llaveNavigation")
                        .WithMany("Serv01Servicios")
                        .HasForeignKey("Serv02llave")
                        .HasConstraintName("FK_SERV01_Servicio_SERV02_TipoServicio");

                    b.Navigation("Serv02llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.sist03Comuna", b =>
                {
                    b.HasOne("mipBackend.Models.sist04Region", "sist04llaveNavigation")
                        .WithMany("sist03Comunas")
                        .HasForeignKey("sist04llave")
                        .HasConstraintName("FK_SIST03_Comuna_SIST04_Region");

                    b.Navigation("sist04llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.sist08ContactoUsuario", b =>
                {
                    b.HasOne("mipBackend.Models.per02Genero", "per02llaveNavigation")
                        .WithMany("sist08ContactoUsuarios")
                        .HasForeignKey("per02llave")
                        .HasConstraintName("FK_SIST08_ContactoUsuario_PER02_Genero");

                    b.Navigation("per02llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.Temp01Temporada", b =>
                {
                    b.HasOne("mipBackend.Models.Temp02TemporadaBase", "Temp02llaveNavigation")
                        .WithMany("Temp01Temporada")
                        .HasForeignKey("Temp02llave")
                        .HasConstraintName("FK_TEMP01_Temporada_TEMP02_TemporadaBase");

                    b.HasOne("mipBackend.Models.Temp03Segmentacion", "Temp03llaveNavigation")
                        .WithMany("Temp01Temporada")
                        .HasForeignKey("Temp03llave")
                        .HasConstraintName("FK_TEMP01_Temporada_TEMP03_Segmentacion");

                    b.Navigation("Temp02llaveNavigation");

                    b.Navigation("Temp03llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.Trp01Trampa", b =>
                {
                    b.HasOne("mipBackend.Models.cnt08Segmentacion", "cnt08llaveNavigation")
                        .WithMany("Trp01Trampas")
                        .HasForeignKey("cnt08llave")
                        .HasConstraintName("FK_TRP01_Trampa_CNT08_Segmentacion");

                    b.HasOne("mipBackend.Models.esp01especie", "esp01llaveNavigation")
                        .WithMany("Trp01Trampas")
                        .HasForeignKey("esp01llave")
                        .HasConstraintName("FK_TRP01_Trampa_ESP01_especies");

                    b.Navigation("cnt08llaveNavigation");

                    b.Navigation("esp01llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.Trp02Temporada", b =>
                {
                    b.HasOne("mipBackend.Models.Temp02TemporadaBase", "Temp02llaveNavigation")
                        .WithMany("Trp02Temporada")
                        .HasForeignKey("Temp02llave")
                        .IsRequired()
                        .HasConstraintName("FK_TRP02_Temporada_TEMP02_TemporadaBase");

                    b.HasOne("mipBackend.Models.Trp01Trampa", "Trp01llaveNavigation")
                        .WithMany("Trp02Temporada")
                        .HasForeignKey("Trp01llave")
                        .IsRequired()
                        .HasConstraintName("FK_TRP02_Temporada_TRP01_Trampa");

                    b.Navigation("Temp02llaveNavigation");

                    b.Navigation("Trp01llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.wkf01Flujo", b =>
                {
                    b.HasOne("mipBackend.Models.wkf03Nivel", "wkf03llaveNavigation")
                        .WithMany("wkf01Flujos")
                        .HasForeignKey("wkf03llave")
                        .HasConstraintName("FK_WKF01_Flujo_WKF03_Nivel");

                    b.Navigation("wkf03llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.wkf03Nivel", b =>
                {
                    b.HasOne("mipBackend.Models.wkf02TipoFlujo", "wkf02llaveNavigation")
                        .WithMany("wkf03Nivels")
                        .HasForeignKey("wkf02llave")
                        .HasConstraintName("FK_WKF03_Nivel_WKF02_TipoFlujo");

                    b.Navigation("wkf02llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.wkf04Nivelpermiso", b =>
                {
                    b.HasOne("mipBackend.Models.wkf03Nivel", "wkf03llaveNavigation")
                        .WithMany("wkf04Nivelpermisos")
                        .HasForeignKey("wkf03llave")
                        .HasConstraintName("FK_WKF04_Nivelpermiso_WKF03_Nivel");

                    b.HasOne("mipBackend.Models.wkf05Tipopermiso", "wkf05llaveNavigation")
                        .WithMany("wkf04Nivelpermisos")
                        .HasForeignKey("wkf05llave")
                        .HasConstraintName("FK_WKF04_Nivelpermiso_WKF05_Tipopermiso");

                    b.Navigation("wkf03llaveNavigation");

                    b.Navigation("wkf05llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.wkf01FLujo", b =>
                {
                    b.HasOne("mipBackend.Models.wkf01Flujo", "wkf01llaveNavigation")
                        .WithMany("wkf01Flujos")
                        .HasForeignKey("wkf01llave")
                        .HasConstraintName("FK_WKF06_perfiles_WKF01_Flujo");

                    b.Navigation("wkf01llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.wkf07perfilespermiso", b =>
                {
                    b.HasOne("mipBackend.Models.wkf05Tipopermiso", "wkf05llaveNavigation")
                        .WithMany("wkf07perfilespermisos")
                        .HasForeignKey("wkf05llave")
                        .IsRequired()
                        .HasConstraintName("FK_WKF07_perfilespermiso_WKF05_Tipopermiso");

                    b.HasOne("mipBackend.Models.wkf06perfil", "wkf06llaveNavigation")
                        .WithMany("wkf07perfilespermisos")
                        .HasForeignKey("wkf06llave")
                        .IsRequired()
                        .HasConstraintName("FK_WKF07_perfilespermiso_WKF06_perfiles");

                    b.Navigation("wkf05llaveNavigation");

                    b.Navigation("wkf06llaveNavigation");
                });

            modelBuilder.Entity("mipBackend.Models.wkf09Parametro", b =>
                {
                    b.HasOne("mipBackend.Models.wkf01Flujo", "wkf01llaveNavigation")
                        .WithMany("wkf09Parametros")
                        .HasForeignKey("wkf01llave")
                        .HasConstraintName("FK_WKF09_Parametro_WKF01_Flujo");

                    b.HasOne("mipBackend.Models.wkf10TipoParametro", "wkf10llaveNavigation")
                        .WithMany("wkf09Parametros")
                        .HasForeignKey("wkf10llave")
                        .HasConstraintName("FK_WKF09_Parametro_WKF10_TipoParametro");

                    b.Navigation("wkf01llaveNavigation");

                    b.Navigation("wkf10llaveNavigation");
                });

            modelBuilder.Entity("Mnt02especiesAsignada", b =>
                {
                    b.HasOne("mipBackend.Models.esp02Temporadaespecie", null)
                        .WithMany()
                        .HasForeignKey("esp02llave")
                        .IsRequired()
                        .HasConstraintName("FK_MNT02_especiesAsignadas_ESP02_Temporadaespecie");

                    b.HasOne("mipBackend.Models.Mnt01Monitor", null)
                        .WithMany()
                        .HasForeignKey("Mnt01llave")
                        .IsRequired()
                        .HasConstraintName("FK_MNT02_especiesAsignadas_MNT01_Monitores");
                });

            modelBuilder.Entity("prf02PlantillasUsuario", b =>
                {
                    b.HasOne("mipBackend.Models.prf01perfil", null)
                        .WithMany()
                        .HasForeignKey("prf01llave")
                        .IsRequired()
                        .HasConstraintName("FK_PRF02_PlantillasUsuario_PRF01_perfiles");

                    b.HasOne("mipBackend.Models.prf03Plantilla", null)
                        .WithMany()
                        .HasForeignKey("prf03llave")
                        .IsRequired()
                        .HasConstraintName("FK_PRF02_PlantillasUsuario_PRF03_Plantilla");
                });

            modelBuilder.Entity("sist07ZonaComuna", b =>
                {
                    b.HasOne("mipBackend.Models.sist02Zona", null)
                        .WithMany()
                        .HasForeignKey("sist02llave")
                        .IsRequired()
                        .HasConstraintName("FK_SIST07_ZonaComuna_SIST02_Zona");

                    b.HasOne("mipBackend.Models.sist03Comuna", null)
                        .WithMany()
                        .HasForeignKey("sist03llave")
                        .IsRequired()
                        .HasConstraintName("FK_SIST07_ZonaComuna_SIST03_Comuna");
                });

            modelBuilder.Entity("mipBackend.Models.Blk01Bloqueo", b =>
                {
                    b.Navigation("Blk03BloqueoUsuarios");

                    b.Navigation("cnt17Bloqueos");
                });

            modelBuilder.Entity("mipBackend.Models.Blk02TipoBloqueo", b =>
                {
                    b.Navigation("Blk01Bloqueos");
                });

            modelBuilder.Entity("mipBackend.Models.Clbr02TipoCalibracion", b =>
                {
                    b.Navigation("Clbr01Calibracions");
                });

            modelBuilder.Entity("mipBackend.Models.cnt01CuentaCliente", b =>
                {
                    b.Navigation("cnt04ContactoClientes");

                    b.Navigation("cnt06ComunicacionClientes");

                    b.Navigation("cnt08Segmentacions");

                    b.Navigation("cnt12Empleados");

                    b.Navigation("cnt14ClienteLicencia");

                    b.Navigation("cnt17Bloqueos");

                    b.Navigation("cnt19LicenciaClientes");

                    b.Navigation("Pgo01CompraLicencia");
                });

            modelBuilder.Entity("mipBackend.Models.cnt02TipoCuenta", b =>
                {
                    b.Navigation("cnt01CuentaClientes");
                });

            modelBuilder.Entity("mipBackend.Models.cnt03TipoCliente", b =>
                {
                    b.Navigation("cnt01CuentaClientes");
                });

            modelBuilder.Entity("mipBackend.Models.cnt05TipoContacto", b =>
                {
                    b.Navigation("cnt04ContactoClientes");
                });

            modelBuilder.Entity("mipBackend.Models.cnt07TipoSegmentacion", b =>
                {
                    b.Navigation("cnt08Segmentacions");
                });

            modelBuilder.Entity("mipBackend.Models.cnt08Segmentacion", b =>
                {
                    b.Navigation("cnt06ComunicacionClientes");

                    b.Navigation("cnt09ComunicacionSegmentacions");

                    b.Navigation("cnt11ContactoSegmentacions");

                    b.Navigation("cnt17Bloqueos");

                    b.Navigation("cnt22EstacionTipoEstacions");

                    b.Navigation("Conteo02Procesados");

                    b.Navigation("Conteo03Resumen");

                    b.Navigation("Inversecnt08llavePadreNavigation");

                    b.Navigation("Trp01Trampas");
                });

            modelBuilder.Entity("mipBackend.Models.cnt10TipoComunicacion", b =>
                {
                    b.Navigation("cnt06ComunicacionClientes");
                });

            modelBuilder.Entity("mipBackend.Models.cnt12Empleado", b =>
                {
                    b.Navigation("cnt15EmpleadoLicencia");
                });

            modelBuilder.Entity("mipBackend.Models.cnt13TipoEmpleado", b =>
                {
                    b.Navigation("cnt12Empleados");
                });

            modelBuilder.Entity("mipBackend.Models.cnt14ClienteLicencia", b =>
                {
                    b.Navigation("cnt17Bloqueos");
                });

            modelBuilder.Entity("mipBackend.Models.cnt16TipoBloqueoCliente", b =>
                {
                    b.Navigation("cnt17Bloqueos");
                });

            modelBuilder.Entity("mipBackend.Models.cnt18NivelSegmentacion", b =>
                {
                    b.Navigation("cnt07TipoSegmentacions");
                });

            modelBuilder.Entity("mipBackend.Models.cnt19LicenciaCliente", b =>
                {
                    b.Navigation("cnt15EmpleadoLicencia");

                    b.Navigation("cnt20LicenciaServicios");

                    b.Navigation("Pgo01CompraLicencia");
                });

            modelBuilder.Entity("mipBackend.Models.cnt21TipoEstacion", b =>
                {
                    b.Navigation("cnt22EstacionTipoEstacions");
                });

            modelBuilder.Entity("mipBackend.Models.Cont02TipoContacto", b =>
                {
                    b.Navigation("Cont01Contactos");
                });

            modelBuilder.Entity("mipBackend.Models.Conteo03Resumen", b =>
                {
                    b.Navigation("Sercltemp01ServiciosClientesTemporals");
                });

            modelBuilder.Entity("mipBackend.Models.Ctt01Contrato", b =>
                {
                    b.Navigation("Lnc03LicenciaContratos");
                });

            modelBuilder.Entity("mipBackend.Models.Ctt02TipoContrato", b =>
                {
                    b.Navigation("Ctt01Contratos");
                });

            modelBuilder.Entity("mipBackend.Models.Eml01BitacoraEmailUsuario", b =>
                {
                    b.Navigation("Eml05ArchivoMails");

                    b.Navigation("Frm02Formularios");
                });

            modelBuilder.Entity("mipBackend.Models.Eml02MailBase", b =>
                {
                    b.Navigation("Eml01BitacoraEmailUsuarios");
                });

            modelBuilder.Entity("mipBackend.Models.Eml03TipoMailAccion", b =>
                {
                    b.Navigation("Eml02MailBases");
                });

            modelBuilder.Entity("mipBackend.Models.Eml04ImportanciaMail", b =>
                {
                    b.Navigation("Eml01BitacoraEmailUsuarios");

                    b.Navigation("Eml02MailBases");
                });

            modelBuilder.Entity("mipBackend.Models.Eml06TipoArchivo", b =>
                {
                    b.Navigation("Eml05ArchivoMail");
                });

            modelBuilder.Entity("mipBackend.Models.esp01especie", b =>
                {
                    b.Navigation("Conteo04ResumenSags");

                    b.Navigation("esp02Temporadaespecies");

                    b.Navigation("esp05Umbrals");

                    b.Navigation("Trp01Trampas");
                });

            modelBuilder.Entity("mipBackend.Models.esp03especieBase", b =>
                {
                    b.Navigation("esp01especies");

                    b.Navigation("esp07Unions");
                });

            modelBuilder.Entity("mipBackend.Models.esp04EstadoDanio", b =>
                {
                    b.Navigation("esp01especies");
                });

            modelBuilder.Entity("mipBackend.Models.esp06MedidaUmbral", b =>
                {
                    b.Navigation("esp04EstadoDanios");
                });

            modelBuilder.Entity("mipBackend.Models.esp08TipoBase", b =>
                {
                    b.Navigation("esp03especieBases");

                    b.Navigation("Obsc01ObservacionCampos");
                });

            modelBuilder.Entity("mipBackend.Models.esp09TipoBaseUmbral", b =>
                {
                    b.Navigation("esp05Umbrals");
                });

            modelBuilder.Entity("mipBackend.Models.esp10TipoRegla", b =>
                {
                    b.Navigation("esp11ReglaGraficos");
                });

            modelBuilder.Entity("mipBackend.Models.Frm01TipoFormulario", b =>
                {
                    b.Navigation("Frm02Formularios");
                });

            modelBuilder.Entity("mipBackend.Models.Lnc01Licencia", b =>
                {
                    b.Navigation("Lnc02ServiciosLicencia");

                    b.Navigation("Lnc03LicenciaContratos");

                    b.Navigation("Lnc05ValorLicencia");

                    b.Navigation("Lnc06Coberturas");

                    b.Navigation("Lnc07Controls");
                });

            modelBuilder.Entity("mipBackend.Models.Log02TipoBitacora", b =>
                {
                    b.Navigation("Log03MensajeBitacoras");
                });

            modelBuilder.Entity("mipBackend.Models.Log03MensajeBitacora", b =>
                {
                    b.Navigation("Log01Bitacoras");
                });

            modelBuilder.Entity("mipBackend.Models.Mnt01Monitor", b =>
                {
                    b.Navigation("Mnt03periodosTrampas");
                });

            modelBuilder.Entity("mipBackend.Models.Mnt04TipoMonitor", b =>
                {
                    b.Navigation("Mnt01Monitores");
                });

            modelBuilder.Entity("mipBackend.Models.Pbcd01Publicidad", b =>
                {
                    b.Navigation("Pbcd03Programacions");
                });

            modelBuilder.Entity("mipBackend.Models.Pbcd02TipoPublicidad", b =>
                {
                    b.Navigation("Pbcd01Publicidads");
                });

            modelBuilder.Entity("mipBackend.Models.per01persona", b =>
                {
                    b.Navigation("cnt01CuentaClientes");

                    b.Navigation("cnt12Empleados");

                    b.Navigation("per05Comunicacions");

                    b.Navigation("per07personaUsuarios");
                });

            modelBuilder.Entity("mipBackend.Models.per02Genero", b =>
                {
                    b.Navigation("per01personas");

                    b.Navigation("sist08ContactoUsuarios");
                });

            modelBuilder.Entity("mipBackend.Models.per03Tipopersona", b =>
                {
                    b.Navigation("cnt03TipoClientes");

                    b.Navigation("per01personas");

                    b.Navigation("per05Comunicacions");

                    b.Navigation("per06TipopersonaComunicacions");
                });

            modelBuilder.Entity("mipBackend.Models.per04TipoComunicacion", b =>
                {
                    b.Navigation("per05Comunicacions");

                    b.Navigation("per06TipopersonaComunicacions");
                });

            modelBuilder.Entity("mipBackend.Models.per06TipopersonaComunicacion", b =>
                {
                    b.Navigation("per05Comunicacions");
                });

            modelBuilder.Entity("mipBackend.Models.Pgo01CompraLicencia", b =>
                {
                    b.Navigation("Pgo02NotificarPagoLicencia");
                });

            modelBuilder.Entity("mipBackend.Models.Pgo03TipoPagoLicencia", b =>
                {
                    b.Navigation("Pgo01CompraLicencia");
                });

            modelBuilder.Entity("mipBackend.Models.prf01perfil", b =>
                {
                    b.Navigation("prf06permisosUsuarios");
                });

            modelBuilder.Entity("mipBackend.Models.prf03Plantilla", b =>
                {
                    b.Navigation("prf04PlantillaFlujos");
                });

            modelBuilder.Entity("mipBackend.Models.prf05TipoAsignacionUsuario", b =>
                {
                    b.Navigation("prf01perfiles");
                });

            modelBuilder.Entity("mipBackend.Models.Region", b =>
                {
                    b.Navigation("Comunas");
                });

            modelBuilder.Entity("mipBackend.Models.Secu01Rol", b =>
                {
                    b.Navigation("Secu06UsuarioRols");
                });

            modelBuilder.Entity("mipBackend.Models.Secu02Usuario", b =>
                {
                    b.Navigation("Conteo05ControlReservas");

                    b.Navigation("Eml01BitacoraEmailUsuarios");

                    b.Navigation("prf01perfiles");

                    b.Navigation("Secu05UsuarioAccesos");

                    b.Navigation("Secu06UsuarioRols");

                    b.Navigation("Secu08UsuarioAplicacions");

                    b.Navigation("Secu10Accesopermitidos");
                });

            modelBuilder.Entity("mipBackend.Models.Secu03TipoAcceso", b =>
                {
                    b.Navigation("Secu05UsuarioAccesos");

                    b.Navigation("Secu10Accesopermitidos");
                });

            modelBuilder.Entity("mipBackend.Models.Secu04TipoEncriptacion", b =>
                {
                    b.Navigation("Secu02Usuarios");
                });

            modelBuilder.Entity("mipBackend.Models.Secu07Aplicacion", b =>
                {
                    b.Navigation("Secu08UsuarioAplicacions");
                });

            modelBuilder.Entity("mipBackend.Models.Sercl01ServiciosCliente", b =>
                {
                    b.Navigation("Sercl02MuestreoFruta");
                });

            modelBuilder.Entity("mipBackend.Models.Serv01Servicio", b =>
                {
                    b.Navigation("Lnc02ServiciosLicencia");
                });

            modelBuilder.Entity("mipBackend.Models.Serv02TipoServicio", b =>
                {
                    b.Navigation("Serv01Servicios");
                });

            modelBuilder.Entity("mipBackend.Models.sist03Comuna", b =>
                {
                    b.Navigation("cnt06ComunicacionClientes");

                    b.Navigation("Conteo04ResumenSags");
                });

            modelBuilder.Entity("mipBackend.Models.sist04Region", b =>
                {
                    b.Navigation("sist03Comunas");
                });

            modelBuilder.Entity("mipBackend.Models.sist05EstadoRegistro", b =>
                {
                    b.Navigation("Ins02RecuperarClaves");
                });

            modelBuilder.Entity("mipBackend.Models.Temp01Temporada", b =>
                {
                    b.Navigation("esp02Temporadaespecies");
                });

            modelBuilder.Entity("mipBackend.Models.Temp02TemporadaBase", b =>
                {
                    b.Navigation("Conteo01Conteos");

                    b.Navigation("Conteo04ResumenSags");

                    b.Navigation("Mnt03periodosTrampas");

                    b.Navigation("Obsc01ObservacionCampos");

                    b.Navigation("Temp01Temporada");

                    b.Navigation("Trp02Temporada");
                });

            modelBuilder.Entity("mipBackend.Models.Temp03Segmentacion", b =>
                {
                    b.Navigation("Temp01Temporada");
                });

            modelBuilder.Entity("mipBackend.Models.Trp01Trampa", b =>
                {
                    b.Navigation("Trp02Temporada");
                });

            modelBuilder.Entity("mipBackend.Models.wkf01Flujo", b =>
                {
                    b.Navigation("wkf06perfiles");

                    b.Navigation("wkf09Parametros");
                });

            modelBuilder.Entity("mipBackend.Models.wkf02TipoFlujo", b =>
                {
                    b.Navigation("wkf03Nivels");
                });

            modelBuilder.Entity("mipBackend.Models.wkf03Nivel", b =>
                {
                    b.Navigation("wkf01Flujos");

                    b.Navigation("wkf04Nivelpermisos");
                });

            modelBuilder.Entity("mipBackend.Models.wkf05Tipopermiso", b =>
                {
                    b.Navigation("wkf04Nivelpermisos");

                    b.Navigation("wkf07perfilespermisos");
                });

            modelBuilder.Entity("mipBackend.Models.wkf06perfil", b =>
                {
                    b.Navigation("prf06permisosUsuarios");

                    b.Navigation("wkf07perfilespermisos");
                });

            modelBuilder.Entity("mipBackend.Models.wkf10TipoParametro", b =>
                {
                    b.Navigation("wkf09Parametros");
                });
#pragma warning restore 612, 618
        }
    }
}
